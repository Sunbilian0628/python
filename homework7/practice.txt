编程题

python3.7

安装好以后，请大家写一段代码

在屏幕上打印出

hello world
你好，世界


这2行代码 先在Python交互式命令行中运行。

再将代码存入文件，用Python解释器去执行该文件。

请大家点击此处链接，观看讲解视频

判断题

Python 解释器 的作用是就像一个翻译，将Python代码翻译成计算机能理解的机器代码去执行。

如果我们想在命令行不需要输入 python.exe的全路径就能执行，就应该设置环境变量 PATH 的值，里面加上解释器程序的目录。

Python代码第一行语句前面可以空好几行

执行下面的语句可以成功，不会报错

PRINT

(

'Hello world'

)

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

**************************************************
**************************************************
安装与运行
题目1

请大家写一行代码，计算并打印出 993 + 196 的和， 乘以 7 的积， 然后除以3

这行代码 先在Python交互式命令行中运行

再将代码存入文件，用Python解释器去执行该文件

答案与解析

题目2

商 和 余数

将代码存入文件，用Python解释器去执行该文件

答案与解析

题目3

请大家写一行代码，查看对象 ‘abc’ 的类型

将代码存入文件，用Python解释器去执行该文件

答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

print

(((

993

+

196

)

*

7

)

/

3

)

题目2-答案

# 这是 商


print

(((

993

+

196

)

*

7

)

//

3

)

# 这是 余数


print

(((

993

+

196

)

*

7

)

%

3

)

题目3-答案

查看对象的类型只需要用 内置函数 type

print

(

type

(

'abc'

))

题目视频讲解

请大家点击此处链接，观看讲解视频

**************************************************
**************************************************
数字运算
题目1

判断下面的说法是否正确

变量就像是对象的名字，程序代码代码访问对象，可以通过变量名去访问对象。

没有任何引用的对象，会被Python解释器清除

num = num + 5  可以简写为 num += 5

在Python语言 中  ，所有类型的数据都是对象

解释器执行完下面的3代码后

a1

=

'老黑'

a2

=

a1

a1

=

'老白'

变量a2的值，也会变成 ‘老白’ , 因为 第2行代码 让 a1 和 a2 都对应同一个对象了， a1变了，a2也会跟着变。

答案与解析

请大家点击此处链接，观看讲解视频

题目2

如下的变量命名中，错误的有哪些

你好

a

1

a

ok

my_1

my

-

1

1

_my

1

-

my

name2age

答案与解析

请大家点击此处链接，观看讲解视频

题目3

在python交互式命令行，执行如下Python语句，解释器报错，是什么原因？

>>> var1 = 'green'
>>> print(Var1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'Var1' is not defined
>>>


答案与解析

请大家点击此处链接，观看讲解视频

题目4

你们公司每月的净利润计算公式如下

(

总收入

-

会计小王薪资

-

餐饮费

-

交通费

)

*

80

%

税费剩余

请写一段代码， 计算并打印出 每月的净利润。 代码中合理的使用变量 和注释。

具体的 收入和支出 数值可以先使用临时数字。

答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

题目1-答案

下面的说法，正确的有哪些？

变量就像是对象的名字，程序代码代码访问对象，可以通过变量名去访问对象。 （对）

没有任何引用的对象，会被Python解释器清除  （对）

num = num + 5  可以简写为 num += 5      （对）

在Python语言 中  ，所有类型的数据都是对象  （对）

解释器执行完下面的3代码后

a1

=

'老黑'

a2

=

a1

a1

=

'老白'

变量a2的值，也会变成 ‘老白’ , 因为 第2行代码 让 a1 和 a2 都对应同一个对象了， a1变了，a2也会跟着变。（错）

题目2-答案

如下的变量命名中，错误的有哪些

你好  -  对，在python3中，中文字符是可以出现在变量名中的，但是不建议这样做
a     -  对
1a    -  错，数字不能开头
ok    -  对
my_1  -  对
my-1  -  错，减号不能出现在变量名中
1_my  -  错，数字不能开头
1-my  -  错，减号不能出现在变量名中
name2age  -  对，变量名非开头部分可以有数字


题目3-答案

在python交互式命令行，执行如下Python语句，解释器报错，是什么原因？

>>> var1 = 'green'
>>> print(Var1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'Var1' is not defined
>>>


答：因为Python是大小写敏感的语言， print语句中的变量名V大写了，和定义的地方不一致，解释器运行时找不到名为Var1的变量

题目4-答案

# 总收入


total_income

=

200000

# 会计小王薪资


salary_xiaowang

=

8000

# 餐饮费


dinner_fee

=

18000

# 交通费


transportation_fee

=

8000

print

(

'本月的净利润为：'

)

print

((

total_income

-

salary_xiaowang

-

dinner_fee

-

transportation_fee

)

*

0.8

)

这样写，比用计算器好在哪里？

好处是，以后，每月需要计算收入，只要修改对应的 数字即可，更清晰直观。

**************************************************
**************************************************
变量和注释
题目1

hello world

答案与解析

请大家点击此处链接，观看讲解视频

题目2

你好世界

答案与解析

请大家点击此处链接，观看讲解视频

题目3

他说：'你好'

注意，字符串里面有英文的单引号

他说："你好"

注意，字符串里面有英文的双引号

答案与解析

请大家点击此处链接，观看讲解视频

题目4

请大家写一行代码，定义一个Python字符串变量 内容为

他说：'你
好'


注意，字符串里面有新的一行

答案与解析

请大家点击此处链接，观看讲解视频

题目5

有如下的代码，定义了一个Python字符串

str1

=

'大家好，我的名字叫：黑羽白月'

请接下来写一行代码，使用字符串切片的方法 ，打印出 str1里面的人名字。

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

字符串变量定义用单引号，双引号，三引号都可以，如下

str1

=

'hello world'

str2

=

"hello world"

str3

=

'''hello world'''

题目2-答案

中文字符串变量定义也是一样，用单引号，双引号，三引号都可以，如下

str1

=

'你好世界'

str2

=

"你好世界"

str3

=

'''你好世界'''

题目3-答案

如果字符串里面有引号，那么定义字符串就应该使用不同的引号。

里面是单引号，外面就用双引号。

里面是双引号，外面就用单引号。

str1

=

"他说：'你好'"

str2

=

'他说："你好"'

题目4-答案

如果字符串里面有换行符，我们定义字符串的时候可以使用三引号，而且字符串里面有引号，那么外面的三引号应该使用不同的类型的引号

str1

=

"""他说：'你
好'"""

也可以使用换行符

str2

=

"他说：'你

\

n

好'"

题目5-答案

可以使用正数下标，数到名字的前面的位置，注意是下标是从0开始，
可以把光标放在字符的前面，按右方向键 一个个的移过去，边移边数，

像这样

str1

=

'大家好，我的名字叫：黑羽白月'

print

(

str1

[

10

:

14

])

print

(

str1

[

10

:])

print

(

str1

[

len

(

str1

)

-

4

:])

print

(

str1

[

-

4

:])

**************************************************
**************************************************
字符串
题目1

如下，

def

testfunc

(

arg1

,

arg2

):

return

(

arg1

+

arg2

)

我们这样定义一个函数后，下面哪些调用方法是错误的

testfunc

(

1

)

testfunc

(

1

,

2

)

testfunc

(

arg1

=

1

,

arg2

=

2

)

testfunc

(

arg2

=

2

,

arg1

=

1

)

testfunc

(

arg1

=

1

,

2

)

testfunc

(

1

,

arg2

=

2

)

print

(

testfunc

(

1

,

arg2

=

2

))

print

(

testfunc

(

1

,

arg2

=

2

)

*

8

)

答案与解析

请大家点击此处链接，观看讲解视频

题目2

请描述一下，下面两个函数定义

def

func1

(

num1

,

num2

):

return

num1

**

2

+

num2

**

2

def

func2

(

num1

,

num2

):

print

(

num1

**

2

+

num2

**

2

)

有什么不同？

答案与解析

请大家点击此处链接，观看讲解视频

题目3

下面这段代码有什么问题？

func1

(

1

,

2

)

def

func1

(

num1

,

num2

):

return

num1

**

2

+

num2

**

2

答案与解析

请大家点击此处链接，观看讲解视频

题目4

请开发一个函数，该函数 接受两个字符串参数，

第1个参数格式如下，

他的名字是：小王


第2个参数格式如下，

他的年龄是：18


两个字符

小王:18

实现该函数后，请调用 该函数，依次传入下面的参数。

他的名字是：关羽
他的年龄是：28


他的名字是：赵云
他的年龄是：24


指定参数名调用

不指定参数名调用

最后，将调用返回结果的返回值打印出来

答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

如下，

def

testfunc

(

arg1

,

arg2

):

return

(

arg1

+

arg2

)

我们这样定义一个函数后，下面哪些调用方法是错误的

testfunc

(

1

)

# 错，必填参数arg2 缺少


testfunc

(

1

,

2

)

# 对


testfunc

(

arg1

=

1

,

arg2

=

2

)

# 对，可以指定参数名传值


testfunc

(

arg2

=

2

,

arg1

=

1

)

# 对，指定参数名时，次序可以颠倒


testfunc

(

arg1

=

1

,

2

)

# 错，一旦指定参数名，后面的参数都要指定参数名


testfunc

(

1

,

arg2

=

2

)

# 对


print

(

testfunc

(

1

,

arg2

=

2

))

# 对, 函数调用的返回值可以不用赋值给变量，
# 直接为作为另一个函数的参数


print

(

testfunc

(

1

,

arg2

=

2

)

*

8

)

# 对, 函数调用的返回值可以不用赋值给变量，
# 直接用在表达式中


题目2-答案

请描述一下，下面两个函数定义

def

func1

(

num1

,

num2

):

return

num1

**

2

+

num2

**

2

def

func2

(

num1

,

num2

):

print

(

num1

**

2

+

num2

**

2

)

有什么不同？

答： 前者是 计算结果作为返回值返回， 后者 只是打印出计算结果，返回值为None

题目3-答案

答： 函数必须先定义再调用， 不能先调用再定义。

题目4-答案

函数定义如下

# 有两个参数


def

getNameAge

(

str1

,

str2

):

# 用切片获取第1个参数的人名


name

=

str1

[

-

2

:]

# 用切片获取第2个参数的 年龄


age

=

str2

[

-

2

:]

# 将人名和 年龄连起来，中间是冒号


ret

=

name

+

':'

+

age

# 别忘了， 最后一定要使用return 返回结果


return

ret

# 不指定参数名的调用


name_age1

=

getNameAge

(

'他的名字是：关羽'

,

'他的年龄是：28'

)

# 打印出返回结果


print

(

name_age1

)

# 指定参数名的调用


name_age2

=

getNameAge

(

str1

=

'他的名字是：赵云'

,

str2

=

'他的年龄是：24'

)

# 打印出返回结果


print

(

name_age2

)

**************************************************
**************************************************
函数
题目1

你们公司每月的净利润计算公式如下

(

总收入

-

会计小王薪资

-

餐饮费

-

交通费

)

*

80

%

税费剩余

请大家写Python程序，合理的使用变量 和注释 ，计算 并 打印出 每月的净利润。

具体的 收入和支出 数值，使用input函数，让用户输入。

答案与解析

题目2

请定义一个函数printlen, 该函数中让用户输入一个字符串， 该函数打印出用户输入的这个字符串的 长度

比如 用户输入 123456789， 该函数应该打印出：长度为9

答案与解析

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

# 总收入


total_income

=

input

(

'本月总收入为：'

)

# 注意，input返回的都是字符串，需要转化为数字对象


total_income

=

int

(

total_income

)

# 会计小王薪资


salary_xiaowang

=

input

(

'会计小王薪资：'

)

# 注意，input返回的都是字符串，需要转化为数字对象


salary_xiaowang

=

int

(

salary_xiaowang

)

# 餐饮费


dinner_fee

=

input

(

'餐饮费：'

)

# 注意，input返回的都是字符串，需要转化为数字对象


dinner_fee

=

int

(

dinner_fee

)

# 交通费


transportation_fee

=

input

(

'交通费：'

)

# 注意，input返回的都是字符串，需要转化为数字对象


transportation_fee

=

int

(

transportation_fee

)

print

(

'本月的净利润为：'

)

print

((

total_income

-

salary_xiaowang

-

dinner_fee

-

transportation_fee

)

*

0.8

)

这个题目的一个注意点是，input返回的是！！数字对象，即使用户输入的是数字，返回的也是字符串，只是字符串中是数字字符。

如果要对返回的结果进行数学计算，需要把字符串转化为数字对象，转化为整数使用内置函数int，转化为小数使用内置函数float

**************************************************
**************************************************
用户输入
题目1

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

答案与解析

请大家点击此处链接，观看讲解视频

题目2

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

答案与解析

请大家点击此处链接，观看讲解视频

题目3

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

请分别用一行代码，实现：

答案与解析

请大家点击此处链接，观看讲解视频

题目4

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

(

'我的名字'

,

'黑羽白月'

),

'hello world!'

]

答案与解析

请大家点击此处链接，观看讲解视频

题目5

判断一下，下面的 代码，执行后打印出的结果是 hello， 还是 ok

def

func

(

arg

):

arg

=

'hello'

var

=

'ok'

func

(

var

)

print

(

var

)

请大家点击此处链接，观看讲解视频

def

func

(

arg

):

arg

[

0

]

=

'hello'

var

=

[

'ok'

]

func

(

var

)

print

(

var

)

请大家点击此处链接，观看讲解视频

def

func

(

arg

):

arg

=

[

'hello'

]

var

=

[

'ok'

]

func

(

var

)

print

(

var

)

请大家点击此处链接，观看讲解视频

答案与解析

题目6

判断下面的说法是否正确

列表和元组里面的元素可以是任意类型的对象，包括字符串、数字、列表、元组、函数

切片操作只能用在列表上，不能用在元组上，因为元组是不可改变的

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

我们可以说 ‘我的名字’ 是 var1 对应的列表里面的一个元素

请大家点击此处链接，观看讲解视频

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

这个字符串是列表的最后一个元素，也可以说是列表的第3个元素

我们可以这样打印

print

(

var1

[

-

1

])

也可以这样打印

print

(

var1

[

2

])

题目2-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

这个人名字是列表的第2个元素（第2个元素本身也是列表） 里面的第二个元素

我们可以这样打印

print

(

var1

[

1

][

1

])

题目3-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

请分别用一行代码，实现：

列表是可变数据类型，因为列表中的元素是可以被替换的。

var1

[

-

1

]

=

'Oh my God!'

var1

[

1

][

1

]

=

'拜月童子'

题目4-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

(

'我的名字'

,

'黑羽白月'

),

'hello world!'

]

元组(Tuple)是不可变数据类型，我们不能这样修改

var1

[

1

][

1

]

=

'拜月童子'

因为 var1[1] 对应的正是里面的第2个元组对象。

要修改其内容， 只有把var1 这个列表对象的整个第2个元组对象替换掉。 因为列表的元素是可以修改的。

所以，可以这样

var1

[

1

]

=

(

'我的名字'

,

'拜月童子'

)

题目5-答案

判断一下，下面的 代码，执行后打印出的结果是 hello， 还是 ok

def

func

(

arg

):

arg

=

'hello'

var

=

'ok'

func

(

var

)

print

(

var

)

答： 还是 ‘ok’ 。

var

=

'ok'

这行代码让变量var 指向了 字符串对象 ‘ok’

func

(

var

)

这行代码调用函数，首先让参数变量arg也指向了 字符串对象 ‘ok’

后面函数里面执行

arg

=

'hello'

让参数变量arg指向关系发生了改变，它指向了另一个字符串对象 ‘hello’

但是，这不会改变 var指向的对象， var还是指向 字符串对象 ‘ok’

所以调用完后， print(var) 的结果，还是  ‘ok’

def

func

(

arg

):

arg

[

0

]

=

'hello'

var

=

[

'ok'

]

func

(

var

)

print

(

var

)

答： 是[‘hello’] 。

var

=

[

'ok'

]

这行代码让变量var 指向了 列表对象 [‘ok’]

func

(

var

)

这行代码调用函数，首先让参数变量arg也指向了 列表对象 [‘ok’]

后面函数里面执行

arg

[

0

]

=

'hello'

列表对象因为这行代码 发生了改变。

所以  外面的 全局变量 var也指向这个列表对象， 列表对象本身改变，自然var 对应的值 也改变了。

def

func

(

arg

):

arg

=

[

'hello'

]

var

=

[

'ok'

]

func

(

var

)

print

(

var

)

答： 是[‘ok’] 。

var

=

[

'ok'

]

这行代码让变量var 指向了 列表对象 [‘ok’]

func

(

var

)

这行代码调用函数，首先让参数变量arg也指向了 列表对象 [‘ok’]

后面函数里面执行

arg

=

[

'hello'

]

但是，这不会改变 var指向的对象， var还是指向 列表对象 [‘ok’]

所以调用完后， print(var) 的结果，还是  [‘ok’]

**************************************************
**************************************************
列表和元组
题目1

请大家实现一个程序， 对人的健康状况进行评估。

该程序运行起来先询问用户

请输入你的身高(单位米):


用户输入身高（比如1.8）后，再询问用户

请输入你的体重(单位公斤):


用户输入体重（比如70）后，再询问用户

请输入你的年龄:


用户输入年龄（比如30）后，进行如下判断：

如果用户 年龄 < 10 岁， 显示：10岁以下儿童不参与健康评估

如果用户 年龄 >=10 岁 并且 < 60 岁：

如果 体重 除以 身高的2次方 > 24 就提示用户体重超重

如果 体重 除以 身高的2次方 < 18 就提示用户体重超轻

否则，就提示用户 体重正常

如果用户 年龄 >= 60 岁， 显示：60岁以上老人不参与健康评估

答案与解析

题目2

运行下面的代码，会打印出 ‘f2’ 吗？ 为什么？

def

f1

():

print

(

'f1'

)

return

True

def

f2

():

print

(

'f2'

)

return

True

if

f1

():

print

(

"a"

)

elif

f2

():

print

(

"b"

)

else

:

print

(

"c"

)

请大家点击此处链接，观看讲解视频

题目3

下面的表达式，运行结果分别是什么

6

>

7

or

(

8

>

9

and

10

>

9

)

(

6

>

7

or

8

>

4

)

and

10

>

9

(

7

>

6

or

8

>

4

)

and

10

>

9

7

>

6

or

(

8

>

4

and

10

>

9

)

请大家点击此处链接，观看讲解视频

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

这是个 判断条件  有多种分支的 程序

height

=

input

(

'请输入你的身高(单位 米):'

)

# 转化为浮点数


intHeight

=

float

(

height

)

weight

=

input

(

'请输入你的体重(单位 公斤):'

)

# 转化为浮点数


intWeight

=

float

(

weight

)

age

=

input

(

'请输入你的年龄:'

)

# 转化为整数


intAge

=

int

(

age

)

if

intAge

<

10

:

print

(

'10岁以下儿童不参与健康评估'

)

elif

intAge

<

60

:

# bmi 变量代表健康指数


bmi

=

intWeight

/

(

intHeight

**

2

)

if

bmi

>

24

:

print

(

'您的体重偏重了'

)

elif

bmi

<

18

:

print

(

'您的体重偏轻了'

)

else

:

print

(

'您的体重正常'

)

else

:

print

(

'60岁以上老人不参与健康评估'

)

**************************************************
**************************************************
判断语句
题目1

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

答案与解析

题目2

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

答案与解析

题目3

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

答案与解析

题目4

有如下的代码，定义了一个Python字符串

str1

=

'大家好，我的名字叫：黑羽白月'

答案与解析

请大家点击此处链接，观看讲解视频

题目5

有如下的代码，定义了一个Python字符串

str1

=

'大家好，我的名字叫：黑羽白月'

答案与解析

请大家点击此处链接，观看讲解视频

题目6

请写一个程序：

首先提示用户输入年龄、身高、体重信息，格式如下如下

请输入您的性别：男
请输入您的身高（厘米）：175厘米
请输入您的体重（公斤）：80公斤


注意：

175  厘米

然后根据如下的计算公式，计算出身高对应的标准体重。

标准体重(男)=(身高cm-100)x0.9(kg)
标准体重(女)=(身高cm-100)x0.9(kg)-2.5(kg)


如果体重在标准体重上下5公斤，都属于标准体重，提示用户体重标准。

否则提示用户高于标准还是低于标准

答案与解析

请大家点击此处链接，观看讲解视频

题目7

请写一个函数，该函数 参数为一个字符串，请验证该字符串是否是一个合法的email地址，合法返回True，否则返回False

规则如下

@

@

比如 ：

validate_email(“@gmail.com”) 返回结果应该是 False

validate_email(“hello.gmail@com”) 返回结果应该是 False

validate_email(“hello.gmail@.com”) 返回结果应该是 False

VIP 学员请将本题答案发给老师，老师通过本题的完成情况评估学习效果。

点击这里，观看 白月黑羽老师 和 VIP小班学员 1对1讲解本题

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

列表后面添加元素当然是用append方法

所以，可以这样

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

var1

.

append

(

'你好'

)

题目2-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

列表前面添加元素可以用insert方法

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

var1

.

insert

(

0

,

'你好'

)

题目3-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

列表中间位置添加元素可以用insert方法，33后面的位置就是 索引为1的位置，所以

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

var1

.

insert

(

1

,

'你好'

)

题目4-答案

有如下的代码，定义了一个Python字符串

str1

=

'大家好，我的名字叫：黑羽白月'

发现名字前面有冒号：

我们可以使用find方法查找冒号的位置。

str1

.

find

(

'：'

)

这个表达式返回的就是冒号在str1字符串的下标位置，不需要我们辛苦的去数下标位置。

注意：冒号是中文冒号，不是英文冒号

我们要的人名部分就在冒号的后面，所以需要 下标加1 ，

str1

.

find

(

'：'

)

+

1

完整代码如下：

str1

=

'大家好，我的名字叫：黑羽白月'

print

(

str1

[

str1

.

find

(

'：'

)

+

1

:])

题目5-答案

有如下的代码，定义了一个Python字符串

str1

=

'大家好，我的名字叫：黑羽白月'

发现名字前面有冒号：

我们可以使用字符串split将冒号前后的字符串切成两个子字符串，存在列表对象中。

str1

.

split

(

'：'

)

这个表达式返回的就是一个列表，里面包含了冒号前后的两个子字符串。

内容是这样的

[

'大家好，我的名字叫'

,

'黑羽白月'

]

显然我们要的人名部分就在列表的第二个元素 ，表达式可以这样写

str1

.

split

(

'：'

)[

1

]

# 列表的第2个元素下标为1


也可以这样写

str1

.

split

(

'：'

)[

-

1

]

# 列表的第最后一个元素下标为-1


完整代码如下：

str1

=

'大家好，我的名字叫：黑羽白月'

print

(

str1

.

split

(

'：'

)[

1

])

split方法 经常用来 从 字符串中扣取出某个数据，大家要学会多用它

题目6-答案

gender

=

input

(

'请输入您的性别：'

)

gender

=

gender

.

replace

(

' '

,

''

)

height

=

input

(

'请输入您的身高（厘米）：'

)

height

=

height

.

replace

(

' '

,

''

)

height

=

height

.

replace

(

'厘米'

,

''

)

height

=

int

(

height

)

weight

=

input

(

'请输入您的体重（公斤）：'

)

weight

=

weight

.

replace

(

' '

,

''

)

weight

=

weight

.

replace

(

'公斤'

,

''

)

weight

=

int

(

weight

)

if

gender

==

'男'

:

standard

=

(

height

-

100

)

*

0.9

else

:

standard

=

(

height

-

100

)

*

0.9

-

2.5

if

standard

-

5

<

weight

<

standard

+

5

:

print

(

'体重健康'

)

elif

standard

<

weight

:

print

(

'太重了'

)

else

:

print

(

'太轻了'

)

**************************************************
**************************************************
对象的方法
题目1

有如下的代码，

str1

=

'大家好，我的名字叫：'

str2

=

'黑羽白月'

请接下来写一行代码，用字符串格式化的方式 将 str1 和 str2 拼接成一个字符串。

答案与解析

题目2

在用户输入后，显示

你的名字是：xxxx， 你的年龄是yy


其中xxxx是刚才用户输入的名字
yy是刚才用户输入的年龄

答案与解析

题目3

下面的 列表中保存了 游戏系统里面的 用户信息

info

=

[

[

'user1'

,

345.6

,

12

,

'黄金'

],

[

'user2'

,

2345.6

,

8

,

'白银'

],

[

'user3555'

,

55345.6

,

22

,

'钻石'

],

]

每个元素也是一个列表， 对应一个用户的信息。

其中， 元素1 是用户的姓名， 元素2 是用户的积分，元素3是用户的等级，元素4是用户的头衔。

请写代码 根据上面的列表，以下面的格式打印用户的信息到屏幕上。

用户：

user1

，

积分：

345.6

，

等级：

12

，

头衔：黄金

用户：

user2

，

积分：

2345.6

，

等级：

8

，

头衔：白银

用户：

user3555

，

积分：

55345.6

，

等级：

12

，

头衔：钻石

注意，使用适当的格式化方式， 使输出像上面那样对齐

答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

对于这样的两个字符串

str1

=

'大家好，我的名字叫：'

str2

=

'黑羽白月'

拼接有很多种方法

可以像这样，使用加号

total

=

str1

+

str2

也可以使用格式化的方式

像这样

total

=

'%s%s'

%

(

str1

,

str2

)

还可以这样格式化

total

=

'{}{}'

.

format

(

str1

,

str2

)

如果使用的Python解释器是3.6以后的版本，可以这样

total

=

f'

{

str1

}{

str2

}

'

题目2-答案

这是一个典型的字符串格式化的例子

完整代码如下：

name

=

input

(

'输入你的名字'

)

age

=

input

(

'输入你的年龄'

)

print

(

f'你的名字是：

{

name

}

， 你的年龄是

{

age

}

'

)

题目3-答案

info

=

[

[

'user1'

,

345.6

,

12

,

'黄金'

],

[

'user2'

,

2345.6

,

8

,

'白银'

],

[

'user3555'

,

55345.6

,

22

,

'钻石'

],

]

print

(

f'用户：

{

info

[

0

][

0

]:

>

10

}

， 积分：

{

info

[

0

][

1

]:

7

}

， 等级：

{

info

[

0

][

2

]:

2

}

， 头衔：

{

info

[

0

][

3

]

}

'

)

print

(

f'用户：

{

info

[

1

][

0

]:

>

10

}

， 积分：

{

info

[

1

][

1

]:

7

}

， 等级：

{

info

[

1

][

2

]:

2

}

， 头衔：

{

info

[

1

][

3

]

}

'

)

print

(

f'用户：

{

info

[

2

][

0

]:

>

10

}

， 积分：

{

info

[

2

][

1

]:

7

}

， 等级：

{

info

[

2

][

2

]:

2

}

， 头衔：

{

info

[

2

][

3

]

}

'

)

**************************************************
**************************************************
格式化字符串
题目1

有如下的2个字符串

str1

=

'''
熊宁
杰益

王伟伟

青芳

玉琴
焦候涛
莫福
杨高旺
唐欢欢
韩旭
'''

str2

=

'''
焦候涛 
熊宁 
玉琴 

骆龙 

韩旭 
杨高旺

杰益  

莫福  

伟伟

李福  
'''

请写一个程序

找出 str1 中所有 str2 中不存在的人名，并且

找出 str2 中所有 str1 中不存在的人名

答案与解析

请大家点击此处链接，观看讲解视频

请大家点击此处链接，观看讲解视频

题目2

有如下的字符串，记录了三国人物的名字和年龄

ageTable

=

'''
    诸葛亮, 28
    刘备, 48
    刘琦, 25
    赵云, 32
    张飞, 43
    关羽, 45
'''

请写一个程序将其中 30岁以上和以下的人分别打印出来，类似这样

大于等于30岁的人有：
刘备
赵云
张飞
关羽

小于30岁的人有：
诸葛亮
刘琦


答案与解析

请大家点击此处链接，观看讲解视频

题目3

关羽 和张飞 正在玩 剪刀石头布 的游戏。

写一个函数calculate_score， 参数是列表， 里面包含了n个元素也是列表。

比如 像这样 [[“剪刀”, “石头”], [“布”, “剪刀”], [“剪刀”, “剪刀”]]

n 个元素代表 n局 比赛，用列表表示，比如 [“剪刀”, “石头”]

其中第1个元素表示关羽打出的手势，第2个元素是张飞打出的手势。

函数要计算出谁赢得次数多，输出比赛结果。

如果他们打成平手，输出“平局”。

比如：

calculate_score

([[

"剪刀"

,

"石头"

],

[

"布"

,

"剪刀"

],

[

"剪刀"

,

"剪刀"

]])

输出应该是：

张飞

3

局赢了

2

局，平手一局，张飞胜出

calculate_score

([[

"布"

,

"石头"

],

[

"石头"

,

"剪刀"

],

[

"石头"

,

"剪刀"

]])

输出应该是：

关羽

3

局赢了

3

局，关羽胜出

答案与解析

和VIP学员甲讲解本题，当你毫无思路时，如何用伪代码理清思路

和VIP学员乙讲解本题的开发思路，他已经可以开发出一部分代码，但是关键点卡住了

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

str1

=

'''
熊宁
杰益

王伟伟

青芳

玉琴
焦候涛
莫福
杨高旺
唐欢欢
韩旭
'''

str2

=

'''
焦候涛 
熊宁 
玉琴 

骆龙 

韩旭 
杨高旺

杰益  

莫福  

伟伟

李福  
'''

# 注意：有的人名 可能是另外一个人名的一部分，
# 比如 伟伟 是王伟伟 的一部分， 
# 所以我们不能 通过 'name in str1' 这样的方式判断


# 先定义一个函数，可以把参数字符串中的人名都放入一个列表中


def

getNameList

(

namesStr

):

tmp

=

namesStr

.

splitlines

()

# 去掉其中的空行和人名前后的空格


names

=

[]

for

name

in

tmp

:

name

=

name

.

strip

()

if

name

==

''

:

continue

names

.

append

(

name

)

return

names

names1

=

getNameList

(

str1

)

names2

=

getNameList

(

str2

)

print

(

'str1中独有的人名是：'

)

for

name

in

names1

:

if

name

not

in

names2

:

print

(

name

)

print

(

'

\

n

\

n

'

)

print

(

'str2中独有的人名是：'

)

for

name

in

names2

:

if

name

not

in

names1

:

print

(

name

)

题目2-答案

ageTable

=

'''
    诸葛亮, 28
    刘备, 48
    刘琦, 25
    赵云, 32
    张飞, 43
    关羽, 45
'''

# 先转换成如下格式的列表
# ageList = [
#     '诸葛亮, 28',
#     '刘备, 48',
#     '赵云, 42',
#     ....
# ]


ageList

=

[]

for

item

in

ageTable

.

split

(

'

\

n

'

):

# 跳过空行


if

item

.

strip

()

==

''

:

continue

ageList

.

append

(

item

)

g30

=

[]

# 大于30岁人员列表


l30

=

[]

# 小于30岁人员列表


for

oneman

in

ageList

:

name

,

age

=

oneman

.

split

(

','

)

age

=

int

(

age

.

strip

())

name

=

name

.

strip

()

if

age

>=

30

:

g30

.

append

(

name

)

else

:

l30

.

append

(

name

)

print

(

'大于等于30岁的人有：'

)

for

man

in

g30

:

print

(

man

)

print

(

'

\

n

小于30岁的人有：'

)

for

man

in

l30

:

print

(

man

)

题目3-答案

def

calculate_score

(

rounds

):

guan_win_round

=

0

zhang_win_round

=

0

ping_round

=

0

# 取出列表里面每一局round，进行如下处理：


for

round

in

rounds

:

guan

=

round

[

0

]

zhang

=

round

[

1

]

# 判断谁赢


win

=

None

if

guan

==

'剪刀'

:

if

zhang

==

'石头'

:

win

=

'z'

elif

zhang

==

'剪刀'

:

win

=

'='

elif

zhang

==

'布'

:

win

=

'g'

elif

guan

==

'石头'

:

if

zhang

==

'石头'

:

win

=

'='

elif

zhang

==

'剪刀'

:

win

=

'g'

elif

zhang

==

'布'

:

win

=

'z'

elif

guan

==

'布'

:

if

zhang

==

'石头'

:

win

=

'g'

elif

zhang

==

'剪刀'

:

win

=

'z'

elif

zhang

==

'布'

:

win

=

'='

if

win

==

'g'

:

print

(

'关羽赢'

)

guan_win_round

+=

1

elif

win

==

'z'

:

print

(

'张飞赢'

)

zhang_win_round

+=

1

elif

win

==

'='

:

print

(

'平局'

)

ping_round

+=

1

print

(

'

\

n

=============

\

n

'

)

print

(

f'关羽赢

{

guan_win_round

}

次'

)

print

(

f'张飞赢

{

zhang_win_round

}

次'

)

print

(

f'平局

{

ping_round

}

次'

)

if

guan_win_round

>

zhang_win_round

:

print

(

'关羽赢'

)

elif

guan_win_round

<

zhang_win_round

:

print

(

'张飞赢'

)

else

:

print

(

'平局'

)

calculate_score

([[

'剪刀'

,

'石头'

],

[

'布'

,

'剪刀'

],

[

'剪刀'

,

'剪刀'

]])

**************************************************
**************************************************
循环
题目1

链接另存为

0013_a1.txt

该文件的内容编码方式是utf8。

该文件中记录了小区中人的姓名和年龄

请编写一个程序，将其中年龄大于50岁的找出来， 并且以这样的格式追加到该文件末尾中。

大于50岁的人有：xxx,xxx,xxx


答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目2

你们公司有一批图片文件，不小心被管理人员把扩展名都去掉了。

这批图片文件中有的是png文件，有的是jpg文件。

89  50  4e  47  0d  0a  1a  0a

现在要求你写一个函数，参数是图片文件的路径，函数根据文件的开头8个字节的信息，判断该文件是不是png文件。

如果是，打印出 png， 否则打印出 jpg。

小班学员请联系老师获取答案视频讲解

补充练习

小班学员请联系老师获取补充练习，并做阶段学习交流

题目1-答案

# 因为文件是utf8编码


with

open

(

'0013_a1.txt'

,

encoding

=

'utf8'

)

as

f

:

lines

=

f

.

read

().

splitlines

()

oldPeople

=

[]

for

line

in

lines

:

# 去掉行中的空格


line

=

line

.

replace

(

' '

,

''

)

# 如果是空格，跳过


if

not

line

:

continue

name

,

age

=

line

.

split

(

':'

)

if

int

(

age

)

>

50

:

oldPeople

.

append

(

name

)

oldPeopleStr

=

','

.

join

(

oldPeople

)

appendText

=

f'

\

n

\

n

大于50岁的人有：

{

oldPeopleStr

}

'

with

open

(

'0013_a1.txt'

,

'a'

,

encoding

=

'utf8'

)

as

f

:

f

.

write

(

appendText

)

**************************************************
**************************************************
文件读写
题目1

请大家使用 pip install requests 命令安装好 requests 库。

该库可以用来构建http请求发送给服务器，并获取响应消息。 经常用于测试服务端和一些自动化工作。

使用文档可以参考：http://cn.python-requests.org/zh_CN/latest/

以大秦铁路（股票代码：sh601006）为例，如果要获取它的最新行情，只需访问新浪的接口：
http://hq.sinajs.cn/list=sh601006

这个url会返回一串文本，例如：

var hq_str_sh601006="大秦铁路, 27.55, 27.25, 26.91, 27.55, 26.20, 26.91, 26.92,22114263, 589824680, 4695, 26.91, 57590, 26.90, 14700, 26.89, 14300,26.88, 15100, 26.87, 3100, 26.92, 8900, 26.93, 14230, 26.94, 25150, 26.95, 15220, 26.96, 2008-01-11, 15:05:32";


这个字符串由许多数据拼接在一起，不同含义的数据用逗号隔开了，按照程序员的思路，顺序号从0开始。

0：”大秦铁路”，股票名字；
1：”27.55″，今日开盘价；
2：”27.25″，昨日收盘价；


后面的字段我们就不需要了

getStockPrice

答案与解析

请大家点击此处链接，观看讲解视频

题目2

链接另存为

getissue.py

这个文件里面有一个函数 getIssueBody。 可以将我们论坛上指定某个帖子的主体内容返回回来。

其参数是帖子的ID。

请大家编写一个程序使用该函数，分别返回ID 为 1 和 2 的两个帖子的内容。

要求大家编写程序的代码文件 （比如main.py）和  getissue.py 分别放在不同的目录下面。

大家可以通过 设置环境变量 PYTHONPATH,  或者直接修改 sys.path 的方式， 让解释器可以寻找到 getissue.py 这个模块文件。

答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

import

requests

def

getStockPrice

(

stockName

):

# 构造 HTTP 请求


url

=

f'http://hq.sinajs.cn/list=

{

stockName

}

'

# 返回的response 对应响应消息的对象


response

=

requests

.

get

(

url

)

# 返回的内容在消息体中，通过text属性获取


info

=

response

.

text

print

(

info

)

# 返回的是这种格式 大秦铁路, 27.55, 27.25, 26.91,


# 通过split 方法截取


price

=

info

.

split

(

','

)[

1

]

return

price

price

=

getStockPrice

(

'sz000063'

)

print

(

price

)

题目2-答案

假设我们下载 模块 getissue.py 文件存储路径为 d:\libs\getissue.py

而我们编写的调用该函数的代码文件路径为 e:\main.py, 其内容为

from

getissue

import

getIssueBody

# 获取ID 为 1 的 帖子的内容


print

(

getIssueBody

(

1

))

# 获取ID 为 2 的 帖子的内容


print

(

getIssueBody

(

2

))

那么我们运行的时候 在进入命令行的时候，输入命令

set PYTHONPATH=d:\libs

set PYTHONPATH=d:\libs

设置环境变量，这样解释器启动后， d:\libs 这个路径就会被加到 sys.path中， 当执行 import xxx 模块的时候，就会把这个路径作为模块搜索的路径之一。

如下所示

**************************************************
**************************************************
使用库
题目1

链接另存为

0016_1.txt

这个是一个数据文件，格式如下

薛蟠

4560

42

薛蝌

4460

25

薛宝钗

5776

43

这里面有3列数据，分别 保存了 游戏系统的用户名， 用户积分 ， 年龄

现在要求大家写一个程序，打印出该数据文件中积分最多的用户姓名。

大家使用教程里面推荐的 Pycharm 集成开发环境，创建一个项目文件，并写相应的代码。

在开发过程中，发现问题，可以使用我们教程推荐的 调试程序的方法进行调试，发现问题根源，并解决问题。

答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

# 因为文件是utf8编码


with

open

(

'0016_1.txt'

,

encoding

=

'utf8'

)

as

f

:

infoList

=

f

.

read

().

splitlines

()

# 该列表保存积分最多人的姓名


maxpeople

=

[]

# 该变量保存积分最多的分值


maxCoin

=

0

for

info

in

infoList

:

# 去掉行左右空白内容


info

=

info

.

strip

()

# 如果是空行，跳过此行


if

not

info

:

continue

# 以空格符为分隔符，切割行内容


parts

=

info

.

split

(

' '

)

# 姓名在第1列


name

=

parts

[

0

]

# 积分在倒数第二列


coin

=

int

(

parts

[

-

2

])

# 如果当前用户积分 大于 记录中的最大积分


if

coin

>

maxCoin

:

maxpeople

=

[

name

]

maxCoin

=

coin

# 如果当前用户积分 等于 记录中的最大积分


elif

coin

==

maxCoin

:

maxpeople

.

append

(

name

)

print

(

maxpeople

)

**************************************************
**************************************************
调试程序
题目1

链接另存为

0016_1.txt

这个是一个数据文件，格式如下

薛蟠

4560

42

薛蝌

4460

25

薛宝钗

5776

43

薛宝琴

4346

42

王夫人

3360

25

王熙凤

4460

35

王子腾

5660

45

王仁

5034

65

尤二姐

5324

25

贾芹

5663

25

贾蓉

3446

15

贾兰

3443

35

贾芸

4522

25

尤三姐

5905

45

贾珍

4603

25

这里面有3列数据，分别 保存了 游戏系统的用户名， 用户积分 ， 年龄

现在要求大家写一个程序，计算出同一姓氏的人的积分总和。

输出结果格式如下：

薛

:

19142

王

:

18514

尤

:

11229

贾

:

21677

答案与解析

请大家点击此处链接，观看讲解视频

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

with

open

(

'0016_1.txt'

,

encoding

=

'utf8'

)

as

f

:

infoList

=

f

.

read

().

splitlines

()

coinTable

=

{}

for

info

in

infoList

:

# 先去除左右空白字符


info

=

info

.

strip

()

if

not

info

:

continue

parts

=

info

.

split

(

' '

)

name

=

parts

[

0

]

coin

=

int

(

parts

[

-

2

])

# 如果姓氏还没有在统计表中


# 创建新元素


if

name

[

0

]

not

in

coinTable

:

coinTable

[

name

[

0

]]

=

coin

# 如果姓氏已经在统计表中


# 累加积分


else

:

coinTable

[

name

[

0

]]

+=

coin

for

name1

,

coins

in

coinTable

.

items

():

print

(

f'

{

name1

}

 : 

{

coins

}

'

)

**************************************************
**************************************************
字典
题目1

链接另存为

0019.txt

这个是一个数据文件，格式如下

薛蟠

4560

42

薛蝌

4460

25

薛宝钗

5776

43

请大家写一个程序，依次打印出里面的每一行内容的字符串长度。

注意： 这个文件应该是UTF8编码的格式，但是，由于历史原因，可能里面有些字符不是UTF8编码。

要求大家再解码每行内容的时候，如果UTF8解码错误，捕获该类型的错误，打印出 错误编码在文件中的行数，并且能够继续进行后续行的处理。

最后输出结果格式如下

第0001行，有14个字符
第0002行，有14个字符
第0003行，有13个字符
第0004行，有非utf8编码字符！！！！！！！！！！！
第0005行，有13个字符
第0006行，有14个字符


答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

# 因为文件可能包含非UTF8编码字符
# 不能指定全文使用UTF8解码
# 所以使用二进制模式打开


with

open

(

'0019.txt'

,

'rb'

)

as

f

:

bytesLines

=

f

.

read

().

splitlines

()

lineIdx

=

1

for

bytesLine

in

bytesLines

:

try

:

infoStr

=

bytesLine

.

decode

(

'UTF8'

)

print

(

f'第

{

lineIdx

:

04

}

行，有

{

len

(

infoStr

)

}

个字符'

)

except

UnicodeDecodeError

:

print

(

f'第

{

lineIdx

:

04

}

行，有非UTF8编码字符 ！！！'

)

lineIdx

+=

1

**************************************************
**************************************************
异常
题目1

请写一个函数 equals ，该函数参数为任意数量的数字，请在函数中统计出这些参数数字中重复的数字有多少个

比如 ：

equals

(

3

,

4

,

3

,

4

,

1

,

6

,

2

)

输出为：

数字

3

出现了

2

次

数字

4

出现了

2

次

数字

1

出现了

1

次

数字

6

出现了

1

次

数字

2

出现了

1

次

答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

def

equals

(

*

nums

):

# 定义统计表


stats

=

{}

for

num

in

nums

:

# 已经在统计表中


if

num

in

stats

:

stats

[

num

]

+=

1

# 不在统计表中


else

:

stats

[

num

]

=

1

for

num

,

times

in

stats

.

items

():

print

(

f'数字 

{

num

}

 出现了 

{

times

}

 次'

)

equals

(

3

,

4

,

3

,

4

,

1

,

6

,

2

)

**************************************************
**************************************************
函数可变参数
题目1

请写一个程序，在当前工作目录下，创建 如下的目录层级结构

backup/new/

然后把整个下载的source目录 内容，拷贝到 backup/new/source 目录里面去。

题目2

请写一个程序，计算出 下载的source目录里面（不包含子目录）所有的文件的大小之和

题目3

请写一个程序，删除掉 下载的source目录里面（不包含子目录）所有的扩展名为bmp的文件

题目4

请写一个程序，找出下载的source目录里面（不包含子目录）所有扩展名为.avi的文件，扩展名改为.dll

题目5

请写一个程序，找出下载的source目录里面（包含子目录）所有扩展名为.avi的文件，扩展名改为.dll

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

from

shutil

import

copytree

import

os

os

.

makedirs

(

'backup/new'

)

copytree

(

'source'

,

'backup/new/source'

)

题目2-答案

import

os

from

os.path

import

isfile

,

join

# 目标目录


targetDir

=

'source'

totalsize

=

0

for

f

in

os

.

listdir

(

targetDir

):

filePath

=

join

(

targetDir

,

f

)

if

isfile

(

filePath

):

totalsize

+=

os

.

path

.

getsize

(

filePath

)

print

(

f'合计大小为 

{

totalsize

}

 字节'

)

题目3-答案

import

os

from

os.path

import

isfile

,

join

targetDir

=

'source'

totalsize

=

0

for

f

in

os

.

listdir

(

targetDir

):

filePath

=

join

(

targetDir

,

f

)

if

isfile

(

filePath

)

and

filePath

.

endswith

(

'.bmp'

):

print

(

f'删除文件

{

filePath

}

'

)

os

.

remove

(

filePath

)

题目4-答案

import

os

from

os.path

import

isfile

,

join

targetDir

=

'source'

totalsize

=

0

for

f

in

os

.

listdir

(

targetDir

):

filePath

=

join

(

targetDir

,

f

)

if

isfile

(

filePath

)

and

filePath

.

endswith

(

'.avi'

):

newname

=

filePath

[:

-

3

]

+

'dll'

os

.

rename

(

filePath

,

newname

)

题目5-答案

import

os

from

os.path

import

join

# 目标目录


targetDir

=

r'source'

files

=

[]

# 下面的三个变量 dirpath, dirnames, filenames
# dirpath 代表当前遍历到的目录名
# dirnames 是列表对象，存放当前dirpath中的所有子目录名
# filenames 是列表对象，存放当前dirpath中的所有文件名


for

(

dirpath

,

dirnames

,

filenames

)

in

os

.

walk

(

targetDir

):

for

fn

in

filenames

:

filePath

=

join

(

dirpath

,

fn

)

if

filePath

.

endswith

(

'.avi'

):

newname

=

filePath

[:

-

3

]

+

'dll'

os

.

rename

(

filePath

,

newname

)

**************************************************
**************************************************
文件和目录操作
题目1

请写一个程序，打印出从当天开始，在一年内，所有的周日对应的日期

题目2

该文件记录了购物平台的购物记录，文件格式如下

1456190061> buy product id=vscwg9mg0rg0vt44z1aq
1456071815> buy product id=35u0c7v9jccbbooabssf
1456622256> buy product id=62amh5za0wp2u7rirz75
1456203485> buy product id=m3m6ctfjqy2ykby20gzi
1456439890> buy product id=gpjr76jn74k287fgvj8f
1456021921> buy product id=d53xy60flulobpxyk95c


其中 每行 尖括号之前为数字时间戳，表示记录该行信息的时间，也就是用户购物的时间。

请写一个程序，分析该日志文件，得出一张表，记录每一天合计的购物次数，输出格式如下：

2016-02-21 : 购物 66 次
2016-03-01 : 购物 99 次
2016-02-23 : 购物 87 次
2016-03-03 : 购物 58 次


答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

from

datetime

import

datetime

,

timedelta

today

=

datetime

.

now

().

date

()

for

i

in

range

(

365

):

thatDay

=

today

+

timedelta

(

days

=

i

)

if

thatDay

.

weekday

()

==

6

:

print

(

thatDay

.

strftime

(

'%Y-%m-%d'

))

题目2-答案

import

time

buyTable

=

{}

with

open

(

'esn.log'

)

as

f

:

lines

=

f

.

read

().

splitlines

()

for

line

in

lines

:

# 如果是空行


if

not

line

.

strip

():

continue

timestamp

=

int

(

line

.

split

(

'>'

)[

0

])

# 转化为字符串时间，包含年月日即可


# 方便判断是否是某天


ymd

=

time

.

strftime

(

'%Y-%m-%d'

,

time

.

localtime

(

timestamp

))

# 表中已经有当天记录，+1次


if

ymd

in

buyTable

:

buyTable

[

ymd

]

+=

1

else

:

buyTable

[

ymd

]

=

1

for

date

,

times

in

buyTable

.

items

():

print

(

f'

{

date

}

 : 购物 

{

times

}

 次'

)

**************************************************
**************************************************
日期和时间操作
题目1

请百度搜索并安装文本编辑器notepad++。

并且写一个Python程序，实现：

用命令行启动 notepad++ 编辑器打开当前的代码文件。

过10秒后用Windows下的命令 tasklist 找到该notepad++进程，并获取其进程ID

根据 其进程ID 使用命令 taskkill 杀死notepad++进程。

如何使用这两个命令可以参考该文章 http://tweaks.com/windows/39559/kill-processes-from-command-prompt/

答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

# notepad++程序路径, 由于路径中有空格
# 所以需要双引号括起来，这是Windows shell的语法


notepadexepath

=

r'"d:\

P

rogram Files (x86)\

No

tepad++\notepad++.exe"'

# 当前代码文件的路径


scriptpath

=

r'E:\t1.py'

from

subprocess

import

Popen

,

PIPE

import

time

,

sys

,

os

# 调用notepad++ 打开 当前代码文件


cmd

=

f'

{

notepadexepath

}

 

{

scriptpath

}

'

# 注意，不能用os.system 因为 我们的程序不能等notepad++退出


p

=

Popen

(

args

=

cmd

,

shell

=

True

)

time

.

sleep

(

10

)

# 返回的是 Popen 实例对象


p

=

Popen

(

'tasklist'

,

stdin

=

None

,

stdout

=

PIPE

,

stderr

=

None

,

shell

=

True

)

# communicate 方法返回 输出信息


outinfo

,

errinfo

=

p

.

communicate

()

# 注意返回的内容是bytes 不是 str ，
# 我的是中文windows，所以用gbk解码


outinfo

=

outinfo

.

decode

(

'gbk'

)

# print (outinfo) 


# 在输出中，寻找 notepad++ 的 进程ID


pid

=

None

proclist

=

outinfo

.

splitlines

()

for

pinfo

in

proclist

:

if

'notepad++.exe '

in

pinfo

:

print

(

pinfo

)

infolist

=

pinfo

.

split

(

' '

)

# 去掉其中的空信息


infolist

=

[

info

for

info

in

infolist

if

info

]

# 进程ID是第2个元素


pid

=

infolist

[

1

]

print

(

f'notepad++的进程ID是

{

pid

}

'

)

break

if

pid

is

None

:

print

(

'对不起，没有发现notepad++的进程ID'

)

sys

.

exit

(

2

)

# 杀掉进程


os

.

system

(

f'taskkill /PID 

{

pid

}

 /F'

)

**************************************************
**************************************************
调用其它程序
题目1

请写一个Python程序，实现：

命令行提示用户输入要下载文件的url

对于每个下载任务，新建一个线程去执行下载

答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

from

threading

import

Thread

,

Lock

import

os

# 定义wget的网址


wgetpath

=

r'd:\tools\

wge

t.exe'

# 定义函数作为下载命令的入口


def

downloadTask

(

url

):

# -P 参数指定下载存放目录


os

.

system

(

f'

{

wgetpath

}

 

{

url

}

 -P d:

\

\

tmp'

)

# 循环让用户输入下载任务


while

True

:

url

=

input

(

'请输入下载网址：'

)

if

url

.

strip

()

==

''

:

continue

# 创建一个新线程，执行存款2000操作


thread

=

Thread

(

target

=

downloadTask

,

args

=

(

url

,))

thread

.

start

()

**************************************************
**************************************************
多线程
题目1

请大家使用 pip install requests 命令安装好 requests 库。

使用文档可以参考：http://cn.python-requests.org/zh_CN/latest/

比如，我们要获取 论坛ID 为1 的帖子所有跟帖的信息，只需要访问

https://api.github.com/repos/baiyueheiyu/python3vip-forum/issues/1/comments

返回的响应消息体是json格式的字符串，如下所示

这是一个json数组， 其中每个元素对应一个跟帖的信息。 记录的信息包括了：谁发言的， 发言内容是什么等等。 如上图中红圈部分所示。

请求大家写一个程序， 把跟帖中所有 白月黑羽发言的信息 抓取出来 写到一个文件中。

最后调用notepad++ 打开该文件

答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

import

requests

from

pprint

import

pprint

from

subprocess

import

Popen

res

=

requests

.

get

(

'https://api.github.com/repos/baiyueheiyu/python3vip-forum/issues/1/comments'

)

# 将返回结果转为 python 中的list 对象


commentsList

=

res

.

json

()

with

open

(

'd:/baiyue.txt'

,

'w'

,

encoding

=

'utf8'

)

as

f

:

for

comment

in

commentsList

:

# 如果是baiyueheiyu的发言,写入文件


if

comment

[

'user'

][

'login'

]

==

'baiyueheiyu'

:

f

.

write

(

comment

[

'body'

])

f

.

write

(

'

\

n

---------------

\

n

'

)

# notepad++程序路径, 由于路径中有空格
# 所以需要双引号括起来，这是Windows shell的语法


notepadexepath

=

r'"d:\

P

rogram Files (x86)\

No

tepad++\notepad++.exe"'

# 调用notepad++ 打开 


Popen

(

args

=

f'

{

notepadexepath

}

 d:/baiyue.txt'

,

shell

=

True

)

**************************************************
**************************************************
requests和json
题目1

包含了优质的英语学习音频文件。

这些音频文件 在网页的html文件内容都是以mp3结尾的，如下图所示：

注意：

http://www.listeningexpress.com/studioclassroom/ad/

MP3文件中有空格字符，组成下载网址时，需要进行url编码，否则空格会被当成命令行分隔符。参考代码如下所示

>>>

from

urllib.parse

import

quote

>>>

quote

(

'2019-04-13 NEWSworthy Clips.mp3'

)

'2019-04-13%20NEWSworthy%20Clips.mp3'

答案与解析

请大家点击此处链接，观看讲解视频

请大家点击此处链接，观看讲解视频

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

import

requests

,

re

,

os

from

urllib.parse

import

quote

pageUrl

=

'http://www.listeningexpress.com/studioclassroom/ad/'

WGET_EXE

=

r'd:\

wge

t.exe'

res

=

requests

.

get

(

pageUrl

)

content

=

res

.

text

p

=

re

.

compile

(

r"javascript:p\

(

'(.*?\

.mp

3)'\

)

")
mp3links = p.findall(content)

print('获取到如下mp3文件:')
for link in mp3links:
    print(link)



for link in mp3links:
    fullAddr = pageUrl + quote(link)
    print(f'\n\n下载{fullAddr}')
    os.system(f'{WGET_EXE} {fullAddr}')
    print(f'ok')



**************************************************
**************************************************
正则表达式
题目1

某公司要开发一个 系统， 这个系统运行的时候， 用户输入指令，比如，查询价格，就由相应的查询价格的业务代码去处理。

假设你是系统架构师， 你确定了如下的代码文件结构

Python库模块文件名为 lib.py

里面包含一个装饰器函数 cmd_dispatch, 这个装饰器函数是给 开发业务工程师使用的。

业务代码放在svc.py文件中

在这个代码文件中，开发业务代码的工程师，可以像下面这样使用你的装饰器 cmd_dispatch

# ** svc.py **


from

lib

import

cmd_dispatch

@

cmd_dispatch

(

'查询价格'

)

def

queryPrice

():

# 具体的查询价格处理代码


print

(

'执行查询价格的业务'

)

@

cmd_dispatch

(

'退货'

)

def

refund

():

# 具体的退货处理代码


print

(

'执行退货的业务'

)

装饰器参数是 用户指令字符串，

查询价格

退货

启动代码文件是run.py。

我们运行这个run.py 就启动了整个系统。

代码如下

# ** run.py **


# cmd_route_table 是 lib模块里面的
# 存储了命令对应的业务处理函数


from

lib

import

cmd_route_table

import

svc

while

True

:

op

=

input

(

'请输入你的操作：'

)

# 如果能找到改指令的处理函数


if

op

in

cmd_route_table

:

# 查找改指令对应的业务处理函数


svcFunc

=

cmd_route_table

[

op

]

# 调用业务处理函数


svcFunc

()

else

:

print

(

'该指令没有对应业务处理'

)

请你写出 lib.py这个库， 完成上述的功能，包括装饰器函数 和 cmd_route_table。

扫码分享给朋友，一起学更有动力哦

题目1-答案

## lib.py


cmd_route_table

=

{}

def

cmd_dispatch

(

cmd

):

def

inner

(

func

):

cmd_route_table

[

cmd

]

=

func

return

func

return

inner

点击这里查看和vip学员的讲解视频

**************************************************
**************************************************
装饰器
编程题

python3.7

安装好以后，请大家写一段代码

在屏幕上打印出

hello world
你好，世界


这2行代码 先在Python交互式命令行中运行。

再将代码存入文件，用Python解释器去执行该文件。

请大家点击此处链接，观看讲解视频

判断题

Python 解释器 的作用是就像一个翻译，将Python代码翻译成计算机能理解的机器代码去执行。

如果我们想在命令行不需要输入 python.exe的全路径就能执行，就应该设置环境变量 PATH 的值，里面加上解释器程序的目录。

Python代码第一行语句前面可以空好几行

执行下面的语句可以成功，不会报错

PRINT

(

'Hello world'

)

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

**************************************************
**************************************************
安装与运行
题目1

请大家写一行代码，计算并打印出 993 + 196 的和， 乘以 7 的积， 然后除以3

这行代码 先在Python交互式命令行中运行

再将代码存入文件，用Python解释器去执行该文件

答案与解析

题目2

商 和 余数

将代码存入文件，用Python解释器去执行该文件

答案与解析

题目3

请大家写一行代码，查看对象 ‘abc’ 的类型

将代码存入文件，用Python解释器去执行该文件

答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

print

(((

993

+

196

)

*

7

)

/

3

)

题目2-答案

# 这是 商


print

(((

993

+

196

)

*

7

)

//

3

)

# 这是 余数


print

(((

993

+

196

)

*

7

)

%

3

)

题目3-答案

查看对象的类型只需要用 内置函数 type

print

(

type

(

'abc'

))

题目视频讲解

请大家点击此处链接，观看讲解视频

**************************************************
**************************************************
数字运算
题目1

判断下面的说法是否正确

变量就像是对象的名字，程序代码代码访问对象，可以通过变量名去访问对象。

没有任何引用的对象，会被Python解释器清除

num = num + 5  可以简写为 num += 5

在Python语言 中  ，所有类型的数据都是对象

解释器执行完下面的3代码后

a1

=

'老黑'

a2

=

a1

a1

=

'老白'

变量a2的值，也会变成 ‘老白’ , 因为 第2行代码 让 a1 和 a2 都对应同一个对象了， a1变了，a2也会跟着变。

答案与解析

请大家点击此处链接，观看讲解视频

题目2

如下的变量命名中，错误的有哪些

你好

a

1

a

ok

my_1

my

-

1

1

_my

1

-

my

name2age

答案与解析

请大家点击此处链接，观看讲解视频

题目3

在python交互式命令行，执行如下Python语句，解释器报错，是什么原因？

>>> var1 = 'green'
>>> print(Var1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'Var1' is not defined
>>>


答案与解析

请大家点击此处链接，观看讲解视频

题目4

你们公司每月的净利润计算公式如下

(

总收入

-

会计小王薪资

-

餐饮费

-

交通费

)

*

80

%

税费剩余

请写一段代码， 计算并打印出 每月的净利润。 代码中合理的使用变量 和注释。

具体的 收入和支出 数值可以先使用临时数字。

答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

题目1-答案

下面的说法，正确的有哪些？

变量就像是对象的名字，程序代码代码访问对象，可以通过变量名去访问对象。 （对）

没有任何引用的对象，会被Python解释器清除  （对）

num = num + 5  可以简写为 num += 5      （对）

在Python语言 中  ，所有类型的数据都是对象  （对）

解释器执行完下面的3代码后

a1

=

'老黑'

a2

=

a1

a1

=

'老白'

变量a2的值，也会变成 ‘老白’ , 因为 第2行代码 让 a1 和 a2 都对应同一个对象了， a1变了，a2也会跟着变。（错）

题目2-答案

如下的变量命名中，错误的有哪些

你好  -  对，在python3中，中文字符是可以出现在变量名中的，但是不建议这样做
a     -  对
1a    -  错，数字不能开头
ok    -  对
my_1  -  对
my-1  -  错，减号不能出现在变量名中
1_my  -  错，数字不能开头
1-my  -  错，减号不能出现在变量名中
name2age  -  对，变量名非开头部分可以有数字


题目3-答案

在python交互式命令行，执行如下Python语句，解释器报错，是什么原因？

>>> var1 = 'green'
>>> print(Var1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'Var1' is not defined
>>>


答：因为Python是大小写敏感的语言， print语句中的变量名V大写了，和定义的地方不一致，解释器运行时找不到名为Var1的变量

题目4-答案

# 总收入


total_income

=

200000

# 会计小王薪资


salary_xiaowang

=

8000

# 餐饮费


dinner_fee

=

18000

# 交通费


transportation_fee

=

8000

print

(

'本月的净利润为：'

)

print

((

total_income

-

salary_xiaowang

-

dinner_fee

-

transportation_fee

)

*

0.8

)

这样写，比用计算器好在哪里？

好处是，以后，每月需要计算收入，只要修改对应的 数字即可，更清晰直观。

**************************************************
**************************************************
变量和注释
题目1

hello world

答案与解析

请大家点击此处链接，观看讲解视频

题目2

你好世界

答案与解析

请大家点击此处链接，观看讲解视频

题目3

他说：'你好'

注意，字符串里面有英文的单引号

他说："你好"

注意，字符串里面有英文的双引号

答案与解析

请大家点击此处链接，观看讲解视频

题目4

请大家写一行代码，定义一个Python字符串变量 内容为

他说：'你
好'


注意，字符串里面有新的一行

答案与解析

请大家点击此处链接，观看讲解视频

题目5

有如下的代码，定义了一个Python字符串

str1

=

'大家好，我的名字叫：黑羽白月'

请接下来写一行代码，使用字符串切片的方法 ，打印出 str1里面的人名字。

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

字符串变量定义用单引号，双引号，三引号都可以，如下

str1

=

'hello world'

str2

=

"hello world"

str3

=

'''hello world'''

题目2-答案

中文字符串变量定义也是一样，用单引号，双引号，三引号都可以，如下

str1

=

'你好世界'

str2

=

"你好世界"

str3

=

'''你好世界'''

题目3-答案

如果字符串里面有引号，那么定义字符串就应该使用不同的引号。

里面是单引号，外面就用双引号。

里面是双引号，外面就用单引号。

str1

=

"他说：'你好'"

str2

=

'他说："你好"'

题目4-答案

如果字符串里面有换行符，我们定义字符串的时候可以使用三引号，而且字符串里面有引号，那么外面的三引号应该使用不同的类型的引号

str1

=

"""他说：'你
好'"""

也可以使用换行符

str2

=

"他说：'你

\

n

好'"

题目5-答案

可以使用正数下标，数到名字的前面的位置，注意是下标是从0开始，
可以把光标放在字符的前面，按右方向键 一个个的移过去，边移边数，

像这样

str1

=

'大家好，我的名字叫：黑羽白月'

print

(

str1

[

10

:

14

])

print

(

str1

[

10

:])

print

(

str1

[

len

(

str1

)

-

4

:])

print

(

str1

[

-

4

:])

**************************************************
**************************************************
字符串
题目1

如下，

def

testfunc

(

arg1

,

arg2

):

return

(

arg1

+

arg2

)

我们这样定义一个函数后，下面哪些调用方法是错误的

testfunc

(

1

)

testfunc

(

1

,

2

)

testfunc

(

arg1

=

1

,

arg2

=

2

)

testfunc

(

arg2

=

2

,

arg1

=

1

)

testfunc

(

arg1

=

1

,

2

)

testfunc

(

1

,

arg2

=

2

)

print

(

testfunc

(

1

,

arg2

=

2

))

print

(

testfunc

(

1

,

arg2

=

2

)

*

8

)

答案与解析

请大家点击此处链接，观看讲解视频

题目2

请描述一下，下面两个函数定义

def

func1

(

num1

,

num2

):

return

num1

**

2

+

num2

**

2

def

func2

(

num1

,

num2

):

print

(

num1

**

2

+

num2

**

2

)

有什么不同？

答案与解析

请大家点击此处链接，观看讲解视频

题目3

下面这段代码有什么问题？

func1

(

1

,

2

)

def

func1

(

num1

,

num2

):

return

num1

**

2

+

num2

**

2

答案与解析

请大家点击此处链接，观看讲解视频

题目4

请开发一个函数，该函数 接受两个字符串参数，

第1个参数格式如下，

他的名字是：小王


第2个参数格式如下，

他的年龄是：18


两个字符

小王:18

实现该函数后，请调用 该函数，依次传入下面的参数。

他的名字是：关羽
他的年龄是：28


他的名字是：赵云
他的年龄是：24


指定参数名调用

不指定参数名调用

最后，将调用返回结果的返回值打印出来

答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

如下，

def

testfunc

(

arg1

,

arg2

):

return

(

arg1

+

arg2

)

我们这样定义一个函数后，下面哪些调用方法是错误的

testfunc

(

1

)

# 错，必填参数arg2 缺少


testfunc

(

1

,

2

)

# 对


testfunc

(

arg1

=

1

,

arg2

=

2

)

# 对，可以指定参数名传值


testfunc

(

arg2

=

2

,

arg1

=

1

)

# 对，指定参数名时，次序可以颠倒


testfunc

(

arg1

=

1

,

2

)

# 错，一旦指定参数名，后面的参数都要指定参数名


testfunc

(

1

,

arg2

=

2

)

# 对


print

(

testfunc

(

1

,

arg2

=

2

))

# 对, 函数调用的返回值可以不用赋值给变量，
# 直接为作为另一个函数的参数


print

(

testfunc

(

1

,

arg2

=

2

)

*

8

)

# 对, 函数调用的返回值可以不用赋值给变量，
# 直接用在表达式中


题目2-答案

请描述一下，下面两个函数定义

def

func1

(

num1

,

num2

):

return

num1

**

2

+

num2

**

2

def

func2

(

num1

,

num2

):

print

(

num1

**

2

+

num2

**

2

)

有什么不同？

答： 前者是 计算结果作为返回值返回， 后者 只是打印出计算结果，返回值为None

题目3-答案

答： 函数必须先定义再调用， 不能先调用再定义。

题目4-答案

函数定义如下

# 有两个参数


def

getNameAge

(

str1

,

str2

):

# 用切片获取第1个参数的人名


name

=

str1

[

-

2

:]

# 用切片获取第2个参数的 年龄


age

=

str2

[

-

2

:]

# 将人名和 年龄连起来，中间是冒号


ret

=

name

+

':'

+

age

# 别忘了， 最后一定要使用return 返回结果


return

ret

# 不指定参数名的调用


name_age1

=

getNameAge

(

'他的名字是：关羽'

,

'他的年龄是：28'

)

# 打印出返回结果


print

(

name_age1

)

# 指定参数名的调用


name_age2

=

getNameAge

(

str1

=

'他的名字是：赵云'

,

str2

=

'他的年龄是：24'

)

# 打印出返回结果


print

(

name_age2

)

**************************************************
**************************************************
函数
题目1

你们公司每月的净利润计算公式如下

(

总收入

-

会计小王薪资

-

餐饮费

-

交通费

)

*

80

%

税费剩余

请大家写Python程序，合理的使用变量 和注释 ，计算 并 打印出 每月的净利润。

具体的 收入和支出 数值，使用input函数，让用户输入。

答案与解析

题目2

请定义一个函数printlen, 该函数中让用户输入一个字符串， 该函数打印出用户输入的这个字符串的 长度

比如 用户输入 123456789， 该函数应该打印出：长度为9

答案与解析

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

# 总收入


total_income

=

input

(

'本月总收入为：'

)

# 注意，input返回的都是字符串，需要转化为数字对象


total_income

=

int

(

total_income

)

# 会计小王薪资


salary_xiaowang

=

input

(

'会计小王薪资：'

)

# 注意，input返回的都是字符串，需要转化为数字对象


salary_xiaowang

=

int

(

salary_xiaowang

)

# 餐饮费


dinner_fee

=

input

(

'餐饮费：'

)

# 注意，input返回的都是字符串，需要转化为数字对象


dinner_fee

=

int

(

dinner_fee

)

# 交通费


transportation_fee

=

input

(

'交通费：'

)

# 注意，input返回的都是字符串，需要转化为数字对象


transportation_fee

=

int

(

transportation_fee

)

print

(

'本月的净利润为：'

)

print

((

total_income

-

salary_xiaowang

-

dinner_fee

-

transportation_fee

)

*

0.8

)

这个题目的一个注意点是，input返回的是！！数字对象，即使用户输入的是数字，返回的也是字符串，只是字符串中是数字字符。

如果要对返回的结果进行数学计算，需要把字符串转化为数字对象，转化为整数使用内置函数int，转化为小数使用内置函数float

**************************************************
**************************************************
用户输入
题目1

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

答案与解析

请大家点击此处链接，观看讲解视频

题目2

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

答案与解析

请大家点击此处链接，观看讲解视频

题目3

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

请分别用一行代码，实现：

答案与解析

请大家点击此处链接，观看讲解视频

题目4

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

(

'我的名字'

,

'黑羽白月'

),

'hello world!'

]

答案与解析

请大家点击此处链接，观看讲解视频

题目5

判断一下，下面的 代码，执行后打印出的结果是 hello， 还是 ok

def

func

(

arg

):

arg

=

'hello'

var

=

'ok'

func

(

var

)

print

(

var

)

请大家点击此处链接，观看讲解视频

def

func

(

arg

):

arg

[

0

]

=

'hello'

var

=

[

'ok'

]

func

(

var

)

print

(

var

)

请大家点击此处链接，观看讲解视频

def

func

(

arg

):

arg

=

[

'hello'

]

var

=

[

'ok'

]

func

(

var

)

print

(

var

)

请大家点击此处链接，观看讲解视频

答案与解析

题目6

判断下面的说法是否正确

列表和元组里面的元素可以是任意类型的对象，包括字符串、数字、列表、元组、函数

切片操作只能用在列表上，不能用在元组上，因为元组是不可改变的

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

我们可以说 ‘我的名字’ 是 var1 对应的列表里面的一个元素

请大家点击此处链接，观看讲解视频

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

这个字符串是列表的最后一个元素，也可以说是列表的第3个元素

我们可以这样打印

print

(

var1

[

-

1

])

也可以这样打印

print

(

var1

[

2

])

题目2-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

这个人名字是列表的第2个元素（第2个元素本身也是列表） 里面的第二个元素

我们可以这样打印

print

(

var1

[

1

][

1

])

题目3-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

请分别用一行代码，实现：

列表是可变数据类型，因为列表中的元素是可以被替换的。

var1

[

-

1

]

=

'Oh my God!'

var1

[

1

][

1

]

=

'拜月童子'

题目4-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

(

'我的名字'

,

'黑羽白月'

),

'hello world!'

]

元组(Tuple)是不可变数据类型，我们不能这样修改

var1

[

1

][

1

]

=

'拜月童子'

因为 var1[1] 对应的正是里面的第2个元组对象。

要修改其内容， 只有把var1 这个列表对象的整个第2个元组对象替换掉。 因为列表的元素是可以修改的。

所以，可以这样

var1

[

1

]

=

(

'我的名字'

,

'拜月童子'

)

题目5-答案

判断一下，下面的 代码，执行后打印出的结果是 hello， 还是 ok

def

func

(

arg

):

arg

=

'hello'

var

=

'ok'

func

(

var

)

print

(

var

)

答： 还是 ‘ok’ 。

var

=

'ok'

这行代码让变量var 指向了 字符串对象 ‘ok’

func

(

var

)

这行代码调用函数，首先让参数变量arg也指向了 字符串对象 ‘ok’

后面函数里面执行

arg

=

'hello'

让参数变量arg指向关系发生了改变，它指向了另一个字符串对象 ‘hello’

但是，这不会改变 var指向的对象， var还是指向 字符串对象 ‘ok’

所以调用完后， print(var) 的结果，还是  ‘ok’

def

func

(

arg

):

arg

[

0

]

=

'hello'

var

=

[

'ok'

]

func

(

var

)

print

(

var

)

答： 是[‘hello’] 。

var

=

[

'ok'

]

这行代码让变量var 指向了 列表对象 [‘ok’]

func

(

var

)

这行代码调用函数，首先让参数变量arg也指向了 列表对象 [‘ok’]

后面函数里面执行

arg

[

0

]

=

'hello'

列表对象因为这行代码 发生了改变。

所以  外面的 全局变量 var也指向这个列表对象， 列表对象本身改变，自然var 对应的值 也改变了。

def

func

(

arg

):

arg

=

[

'hello'

]

var

=

[

'ok'

]

func

(

var

)

print

(

var

)

答： 是[‘ok’] 。

var

=

[

'ok'

]

这行代码让变量var 指向了 列表对象 [‘ok’]

func

(

var

)

这行代码调用函数，首先让参数变量arg也指向了 列表对象 [‘ok’]

后面函数里面执行

arg

=

[

'hello'

]

但是，这不会改变 var指向的对象， var还是指向 列表对象 [‘ok’]

所以调用完后， print(var) 的结果，还是  [‘ok’]

**************************************************
**************************************************
列表和元组
题目1

请大家实现一个程序， 对人的健康状况进行评估。

该程序运行起来先询问用户

请输入你的身高(单位米):


用户输入身高（比如1.8）后，再询问用户

请输入你的体重(单位公斤):


用户输入体重（比如70）后，再询问用户

请输入你的年龄:


用户输入年龄（比如30）后，进行如下判断：

如果用户 年龄 < 10 岁， 显示：10岁以下儿童不参与健康评估

如果用户 年龄 >=10 岁 并且 < 60 岁：

如果 体重 除以 身高的2次方 > 24 就提示用户体重超重

如果 体重 除以 身高的2次方 < 18 就提示用户体重超轻

否则，就提示用户 体重正常

如果用户 年龄 >= 60 岁， 显示：60岁以上老人不参与健康评估

答案与解析

题目2

运行下面的代码，会打印出 ‘f2’ 吗？ 为什么？

def

f1

():

print

(

'f1'

)

return

True

def

f2

():

print

(

'f2'

)

return

True

if

f1

():

print

(

"a"

)

elif

f2

():

print

(

"b"

)

else

:

print

(

"c"

)

请大家点击此处链接，观看讲解视频

题目3

下面的表达式，运行结果分别是什么

6

>

7

or

(

8

>

9

and

10

>

9

)

(

6

>

7

or

8

>

4

)

and

10

>

9

(

7

>

6

or

8

>

4

)

and

10

>

9

7

>

6

or

(

8

>

4

and

10

>

9

)

请大家点击此处链接，观看讲解视频

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

这是个 判断条件  有多种分支的 程序

height

=

input

(

'请输入你的身高(单位 米):'

)

# 转化为浮点数


intHeight

=

float

(

height

)

weight

=

input

(

'请输入你的体重(单位 公斤):'

)

# 转化为浮点数


intWeight

=

float

(

weight

)

age

=

input

(

'请输入你的年龄:'

)

# 转化为整数


intAge

=

int

(

age

)

if

intAge

<

10

:

print

(

'10岁以下儿童不参与健康评估'

)

elif

intAge

<

60

:

# bmi 变量代表健康指数


bmi

=

intWeight

/

(

intHeight

**

2

)

if

bmi

>

24

:

print

(

'您的体重偏重了'

)

elif

bmi

<

18

:

print

(

'您的体重偏轻了'

)

else

:

print

(

'您的体重正常'

)

else

:

print

(

'60岁以上老人不参与健康评估'

)

**************************************************
**************************************************
判断语句
题目1

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

答案与解析

题目2

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

答案与解析

题目3

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

答案与解析

题目4

有如下的代码，定义了一个Python字符串

str1

=

'大家好，我的名字叫：黑羽白月'

答案与解析

请大家点击此处链接，观看讲解视频

题目5

有如下的代码，定义了一个Python字符串

str1

=

'大家好，我的名字叫：黑羽白月'

答案与解析

请大家点击此处链接，观看讲解视频

题目6

请写一个程序：

首先提示用户输入年龄、身高、体重信息，格式如下如下

请输入您的性别：男
请输入您的身高（厘米）：175厘米
请输入您的体重（公斤）：80公斤


注意：

175  厘米

然后根据如下的计算公式，计算出身高对应的标准体重。

标准体重(男)=(身高cm-100)x0.9(kg)
标准体重(女)=(身高cm-100)x0.9(kg)-2.5(kg)


如果体重在标准体重上下5公斤，都属于标准体重，提示用户体重标准。

否则提示用户高于标准还是低于标准

答案与解析

请大家点击此处链接，观看讲解视频

题目7

请写一个函数，该函数 参数为一个字符串，请验证该字符串是否是一个合法的email地址，合法返回True，否则返回False

规则如下

@

@

比如 ：

validate_email(“@gmail.com”) 返回结果应该是 False

validate_email(“hello.gmail@com”) 返回结果应该是 False

validate_email(“hello.gmail@.com”) 返回结果应该是 False

VIP 学员请将本题答案发给老师，老师通过本题的完成情况评估学习效果。

点击这里，观看 白月黑羽老师 和 VIP小班学员 1对1讲解本题

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

列表后面添加元素当然是用append方法

所以，可以这样

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

var1

.

append

(

'你好'

)

题目2-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

列表前面添加元素可以用insert方法

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

var1

.

insert

(

0

,

'你好'

)

题目3-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

列表中间位置添加元素可以用insert方法，33后面的位置就是 索引为1的位置，所以

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

var1

.

insert

(

1

,

'你好'

)

题目4-答案

有如下的代码，定义了一个Python字符串

str1

=

'大家好，我的名字叫：黑羽白月'

发现名字前面有冒号：

我们可以使用find方法查找冒号的位置。

str1

.

find

(

'：'

)

这个表达式返回的就是冒号在str1字符串的下标位置，不需要我们辛苦的去数下标位置。

注意：冒号是中文冒号，不是英文冒号

我们要的人名部分就在冒号的后面，所以需要 下标加1 ，

str1

.

find

(

'：'

)

+

1

完整代码如下：

str1

=

'大家好，我的名字叫：黑羽白月'

print

(

str1

[

str1

.

find

(

'：'

)

+

1

:])

题目5-答案

有如下的代码，定义了一个Python字符串

str1

=

'大家好，我的名字叫：黑羽白月'

发现名字前面有冒号：

我们可以使用字符串split将冒号前后的字符串切成两个子字符串，存在列表对象中。

str1

.

split

(

'：'

)

这个表达式返回的就是一个列表，里面包含了冒号前后的两个子字符串。

内容是这样的

[

'大家好，我的名字叫'

,

'黑羽白月'

]

显然我们要的人名部分就在列表的第二个元素 ，表达式可以这样写

str1

.

split

(

'：'

)[

1

]

# 列表的第2个元素下标为1


也可以这样写

str1

.

split

(

'：'

)[

-

1

]

# 列表的第最后一个元素下标为-1


完整代码如下：

str1

=

'大家好，我的名字叫：黑羽白月'

print

(

str1

.

split

(

'：'

)[

1

])

split方法 经常用来 从 字符串中扣取出某个数据，大家要学会多用它

题目6-答案

gender

=

input

(

'请输入您的性别：'

)

gender

=

gender

.

replace

(

' '

,

''

)

height

=

input

(

'请输入您的身高（厘米）：'

)

height

=

height

.

replace

(

' '

,

''

)

height

=

height

.

replace

(

'厘米'

,

''

)

height

=

int

(

height

)

weight

=

input

(

'请输入您的体重（公斤）：'

)

weight

=

weight

.

replace

(

' '

,

''

)

weight

=

weight

.

replace

(

'公斤'

,

''

)

weight

=

int

(

weight

)

if

gender

==

'男'

:

standard

=

(

height

-

100

)

*

0.9

else

:

standard

=

(

height

-

100

)

*

0.9

-

2.5

if

standard

-

5

<

weight

<

standard

+

5

:

print

(

'体重健康'

)

elif

standard

<

weight

:

print

(

'太重了'

)

else

:

print

(

'太轻了'

)

**************************************************
**************************************************
对象的方法
题目1

有如下的代码，

str1

=

'大家好，我的名字叫：'

str2

=

'黑羽白月'

请接下来写一行代码，用字符串格式化的方式 将 str1 和 str2 拼接成一个字符串。

答案与解析

题目2

在用户输入后，显示

你的名字是：xxxx， 你的年龄是yy


其中xxxx是刚才用户输入的名字
yy是刚才用户输入的年龄

答案与解析

题目3

下面的 列表中保存了 游戏系统里面的 用户信息

info

=

[

[

'user1'

,

345.6

,

12

,

'黄金'

],

[

'user2'

,

2345.6

,

8

,

'白银'

],

[

'user3555'

,

55345.6

,

22

,

'钻石'

],

]

每个元素也是一个列表， 对应一个用户的信息。

其中， 元素1 是用户的姓名， 元素2 是用户的积分，元素3是用户的等级，元素4是用户的头衔。

请写代码 根据上面的列表，以下面的格式打印用户的信息到屏幕上。

用户：

user1

，

积分：

345.6

，

等级：

12

，

头衔：黄金

用户：

user2

，

积分：

2345.6

，

等级：

8

，

头衔：白银

用户：

user3555

，

积分：

55345.6

，

等级：

12

，

头衔：钻石

注意，使用适当的格式化方式， 使输出像上面那样对齐

答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

对于这样的两个字符串

str1

=

'大家好，我的名字叫：'

str2

=

'黑羽白月'

拼接有很多种方法

可以像这样，使用加号

total

=

str1

+

str2

也可以使用格式化的方式

像这样

total

=

'%s%s'

%

(

str1

,

str2

)

还可以这样格式化

total

=

'{}{}'

.

format

(

str1

,

str2

)

如果使用的Python解释器是3.6以后的版本，可以这样

total

=

f'

{

str1

}{

str2

}

'

题目2-答案

这是一个典型的字符串格式化的例子

完整代码如下：

name

=

input

(

'输入你的名字'

)

age

=

input

(

'输入你的年龄'

)

print

(

f'你的名字是：

{

name

}

， 你的年龄是

{

age

}

'

)

题目3-答案

info

=

[

[

'user1'

,

345.6

,

12

,

'黄金'

],

[

'user2'

,

2345.6

,

8

,

'白银'

],

[

'user3555'

,

55345.6

,

22

,

'钻石'

],

]

print

(

f'用户：

{

info

[

0

][

0

]:

>

10

}

， 积分：

{

info

[

0

][

1

]:

7

}

， 等级：

{

info

[

0

][

2

]:

2

}

， 头衔：

{

info

[

0

][

3

]

}

'

)

print

(

f'用户：

{

info

[

1

][

0

]:

>

10

}

， 积分：

{

info

[

1

][

1

]:

7

}

， 等级：

{

info

[

1

][

2

]:

2

}

， 头衔：

{

info

[

1

][

3

]

}

'

)

print

(

f'用户：

{

info

[

2

][

0

]:

>

10

}

， 积分：

{

info

[

2

][

1

]:

7

}

， 等级：

{

info

[

2

][

2

]:

2

}

， 头衔：

{

info

[

2

][

3

]

}

'

)

**************************************************
**************************************************
格式化字符串
题目1

有如下的2个字符串

str1

=

'''
熊宁
杰益

王伟伟

青芳

玉琴
焦候涛
莫福
杨高旺
唐欢欢
韩旭
'''

str2

=

'''
焦候涛 
熊宁 
玉琴 

骆龙 

韩旭 
杨高旺

杰益  

莫福  

伟伟

李福  
'''

请写一个程序

找出 str1 中所有 str2 中不存在的人名，并且

找出 str2 中所有 str1 中不存在的人名

答案与解析

请大家点击此处链接，观看讲解视频

请大家点击此处链接，观看讲解视频

题目2

有如下的字符串，记录了三国人物的名字和年龄

ageTable

=

'''
    诸葛亮, 28
    刘备, 48
    刘琦, 25
    赵云, 32
    张飞, 43
    关羽, 45
'''

请写一个程序将其中 30岁以上和以下的人分别打印出来，类似这样

大于等于30岁的人有：
刘备
赵云
张飞
关羽

小于30岁的人有：
诸葛亮
刘琦


答案与解析

请大家点击此处链接，观看讲解视频

题目3

关羽 和张飞 正在玩 剪刀石头布 的游戏。

写一个函数calculate_score， 参数是列表， 里面包含了n个元素也是列表。

比如 像这样 [[“剪刀”, “石头”], [“布”, “剪刀”], [“剪刀”, “剪刀”]]

n 个元素代表 n局 比赛，用列表表示，比如 [“剪刀”, “石头”]

其中第1个元素表示关羽打出的手势，第2个元素是张飞打出的手势。

函数要计算出谁赢得次数多，输出比赛结果。

如果他们打成平手，输出“平局”。

比如：

calculate_score

([[

"剪刀"

,

"石头"

],

[

"布"

,

"剪刀"

],

[

"剪刀"

,

"剪刀"

]])

输出应该是：

张飞

3

局赢了

2

局，平手一局，张飞胜出

calculate_score

([[

"布"

,

"石头"

],

[

"石头"

,

"剪刀"

],

[

"石头"

,

"剪刀"

]])

输出应该是：

关羽

3

局赢了

3

局，关羽胜出

答案与解析

和VIP学员甲讲解本题，当你毫无思路时，如何用伪代码理清思路

和VIP学员乙讲解本题的开发思路，他已经可以开发出一部分代码，但是关键点卡住了

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

str1

=

'''
熊宁
杰益

王伟伟

青芳

玉琴
焦候涛
莫福
杨高旺
唐欢欢
韩旭
'''

str2

=

'''
焦候涛 
熊宁 
玉琴 

骆龙 

韩旭 
杨高旺

杰益  

莫福  

伟伟

李福  
'''

# 注意：有的人名 可能是另外一个人名的一部分，
# 比如 伟伟 是王伟伟 的一部分， 
# 所以我们不能 通过 'name in str1' 这样的方式判断


# 先定义一个函数，可以把参数字符串中的人名都放入一个列表中


def

getNameList

(

namesStr

):

tmp

=

namesStr

.

splitlines

()

# 去掉其中的空行和人名前后的空格


names

=

[]

for

name

in

tmp

:

name

=

name

.

strip

()

if

name

==

''

:

continue

names

.

append

(

name

)

return

names

names1

=

getNameList

(

str1

)

names2

=

getNameList

(

str2

)

print

(

'str1中独有的人名是：'

)

for

name

in

names1

:

if

name

not

in

names2

:

print

(

name

)

print

(

'

\

n

\

n

'

)

print

(

'str2中独有的人名是：'

)

for

name

in

names2

:

if

name

not

in

names1

:

print

(

name

)

题目2-答案

ageTable

=

'''
    诸葛亮, 28
    刘备, 48
    刘琦, 25
    赵云, 32
    张飞, 43
    关羽, 45
'''

# 先转换成如下格式的列表
# ageList = [
#     '诸葛亮, 28',
#     '刘备, 48',
#     '赵云, 42',
#     ....
# ]


ageList

=

[]

for

item

in

ageTable

.

split

(

'

\

n

'

):

# 跳过空行


if

item

.

strip

()

==

''

:

continue

ageList

.

append

(

item

)

g30

=

[]

# 大于30岁人员列表


l30

=

[]

# 小于30岁人员列表


for

oneman

in

ageList

:

name

,

age

=

oneman

.

split

(

','

)

age

=

int

(

age

.

strip

())

name

=

name

.

strip

()

if

age

>=

30

:

g30

.

append

(

name

)

else

:

l30

.

append

(

name

)

print

(

'大于等于30岁的人有：'

)

for

man

in

g30

:

print

(

man

)

print

(

'

\

n

小于30岁的人有：'

)

for

man

in

l30

:

print

(

man

)

题目3-答案

def

calculate_score

(

rounds

):

guan_win_round

=

0

zhang_win_round

=

0

ping_round

=

0

# 取出列表里面每一局round，进行如下处理：


for

round

in

rounds

:

guan

=

round

[

0

]

zhang

=

round

[

1

]

# 判断谁赢


win

=

None

if

guan

==

'剪刀'

:

if

zhang

==

'石头'

:

win

=

'z'

elif

zhang

==

'剪刀'

:

win

=

'='

elif

zhang

==

'布'

:

win

=

'g'

elif

guan

==

'石头'

:

if

zhang

==

'石头'

:

win

=

'='

elif

zhang

==

'剪刀'

:

win

=

'g'

elif

zhang

==

'布'

:

win

=

'z'

elif

guan

==

'布'

:

if

zhang

==

'石头'

:

win

=

'g'

elif

zhang

==

'剪刀'

:

win

=

'z'

elif

zhang

==

'布'

:

win

=

'='

if

win

==

'g'

:

print

(

'关羽赢'

)

guan_win_round

+=

1

elif

win

==

'z'

:

print

(

'张飞赢'

)

zhang_win_round

+=

1

elif

win

==

'='

:

print

(

'平局'

)

ping_round

+=

1

print

(

'

\

n

=============

\

n

'

)

print

(

f'关羽赢

{

guan_win_round

}

次'

)

print

(

f'张飞赢

{

zhang_win_round

}

次'

)

print

(

f'平局

{

ping_round

}

次'

)

if

guan_win_round

>

zhang_win_round

:

print

(

'关羽赢'

)

elif

guan_win_round

<

zhang_win_round

:

print

(

'张飞赢'

)

else

:

print

(

'平局'

)

calculate_score

([[

'剪刀'

,

'石头'

],

[

'布'

,

'剪刀'

],

[

'剪刀'

,

'剪刀'

]])

**************************************************
**************************************************
循环
题目1

链接另存为

0013_a1.txt

该文件的内容编码方式是utf8。

该文件中记录了小区中人的姓名和年龄

请编写一个程序，将其中年龄大于50岁的找出来， 并且以这样的格式追加到该文件末尾中。

大于50岁的人有：xxx,xxx,xxx


答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目2

你们公司有一批图片文件，不小心被管理人员把扩展名都去掉了。

这批图片文件中有的是png文件，有的是jpg文件。

89  50  4e  47  0d  0a  1a  0a

现在要求你写一个函数，参数是图片文件的路径，函数根据文件的开头8个字节的信息，判断该文件是不是png文件。

如果是，打印出 png， 否则打印出 jpg。

小班学员请联系老师获取答案视频讲解

补充练习

小班学员请联系老师获取补充练习，并做阶段学习交流

题目1-答案

# 因为文件是utf8编码


with

open

(

'0013_a1.txt'

,

encoding

=

'utf8'

)

as

f

:

lines

=

f

.

read

().

splitlines

()

oldPeople

=

[]

for

line

in

lines

:

# 去掉行中的空格


line

=

line

.

replace

(

' '

,

''

)

# 如果是空格，跳过


if

not

line

:

continue

name

,

age

=

line

.

split

(

':'

)

if

int

(

age

)

>

50

:

oldPeople

.

append

(

name

)

oldPeopleStr

=

','

.

join

(

oldPeople

)

appendText

=

f'

\

n

\

n

大于50岁的人有：

{

oldPeopleStr

}

'

with

open

(

'0013_a1.txt'

,

'a'

,

encoding

=

'utf8'

)

as

f

:

f

.

write

(

appendText

)

**************************************************
**************************************************
文件读写
题目1

请大家使用 pip install requests 命令安装好 requests 库。

该库可以用来构建http请求发送给服务器，并获取响应消息。 经常用于测试服务端和一些自动化工作。

使用文档可以参考：http://cn.python-requests.org/zh_CN/latest/

以大秦铁路（股票代码：sh601006）为例，如果要获取它的最新行情，只需访问新浪的接口：
http://hq.sinajs.cn/list=sh601006

这个url会返回一串文本，例如：

var hq_str_sh601006="大秦铁路, 27.55, 27.25, 26.91, 27.55, 26.20, 26.91, 26.92,22114263, 589824680, 4695, 26.91, 57590, 26.90, 14700, 26.89, 14300,26.88, 15100, 26.87, 3100, 26.92, 8900, 26.93, 14230, 26.94, 25150, 26.95, 15220, 26.96, 2008-01-11, 15:05:32";


这个字符串由许多数据拼接在一起，不同含义的数据用逗号隔开了，按照程序员的思路，顺序号从0开始。

0：”大秦铁路”，股票名字；
1：”27.55″，今日开盘价；
2：”27.25″，昨日收盘价；


后面的字段我们就不需要了

getStockPrice

答案与解析

请大家点击此处链接，观看讲解视频

题目2

链接另存为

getissue.py

这个文件里面有一个函数 getIssueBody。 可以将我们论坛上指定某个帖子的主体内容返回回来。

其参数是帖子的ID。

请大家编写一个程序使用该函数，分别返回ID 为 1 和 2 的两个帖子的内容。

要求大家编写程序的代码文件 （比如main.py）和  getissue.py 分别放在不同的目录下面。

大家可以通过 设置环境变量 PYTHONPATH,  或者直接修改 sys.path 的方式， 让解释器可以寻找到 getissue.py 这个模块文件。

答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

import

requests

def

getStockPrice

(

stockName

):

# 构造 HTTP 请求


url

=

f'http://hq.sinajs.cn/list=

{

stockName

}

'

# 返回的response 对应响应消息的对象


response

=

requests

.

get

(

url

)

# 返回的内容在消息体中，通过text属性获取


info

=

response

.

text

print

(

info

)

# 返回的是这种格式 大秦铁路, 27.55, 27.25, 26.91,


# 通过split 方法截取


price

=

info

.

split

(

','

)[

1

]

return

price

price

=

getStockPrice

(

'sz000063'

)

print

(

price

)

题目2-答案

假设我们下载 模块 getissue.py 文件存储路径为 d:\libs\getissue.py

而我们编写的调用该函数的代码文件路径为 e:\main.py, 其内容为

from

getissue

import

getIssueBody

# 获取ID 为 1 的 帖子的内容


print

(

getIssueBody

(

1

))

# 获取ID 为 2 的 帖子的内容


print

(

getIssueBody

(

2

))

那么我们运行的时候 在进入命令行的时候，输入命令

set PYTHONPATH=d:\libs

set PYTHONPATH=d:\libs

设置环境变量，这样解释器启动后， d:\libs 这个路径就会被加到 sys.path中， 当执行 import xxx 模块的时候，就会把这个路径作为模块搜索的路径之一。

如下所示

**************************************************
**************************************************
使用库
题目1

链接另存为

0016_1.txt

这个是一个数据文件，格式如下

薛蟠

4560

42

薛蝌

4460

25

薛宝钗

5776

43

这里面有3列数据，分别 保存了 游戏系统的用户名， 用户积分 ， 年龄

现在要求大家写一个程序，打印出该数据文件中积分最多的用户姓名。

大家使用教程里面推荐的 Pycharm 集成开发环境，创建一个项目文件，并写相应的代码。

在开发过程中，发现问题，可以使用我们教程推荐的 调试程序的方法进行调试，发现问题根源，并解决问题。

答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

# 因为文件是utf8编码


with

open

(

'0016_1.txt'

,

encoding

=

'utf8'

)

as

f

:

infoList

=

f

.

read

().

splitlines

()

# 该列表保存积分最多人的姓名


maxpeople

=

[]

# 该变量保存积分最多的分值


maxCoin

=

0

for

info

in

infoList

:

# 去掉行左右空白内容


info

=

info

.

strip

()

# 如果是空行，跳过此行


if

not

info

:

continue

# 以空格符为分隔符，切割行内容


parts

=

info

.

split

(

' '

)

# 姓名在第1列


name

=

parts

[

0

]

# 积分在倒数第二列


coin

=

int

(

parts

[

-

2

])

# 如果当前用户积分 大于 记录中的最大积分


if

coin

>

maxCoin

:

maxpeople

=

[

name

]

maxCoin

=

coin

# 如果当前用户积分 等于 记录中的最大积分


elif

coin

==

maxCoin

:

maxpeople

.

append

(

name

)

print

(

maxpeople

)

**************************************************
**************************************************
调试程序
题目1

链接另存为

0016_1.txt

这个是一个数据文件，格式如下

薛蟠

4560

42

薛蝌

4460

25

薛宝钗

5776

43

薛宝琴

4346

42

王夫人

3360

25

王熙凤

4460

35

王子腾

5660

45

王仁

5034

65

尤二姐

5324

25

贾芹

5663

25

贾蓉

3446

15

贾兰

3443

35

贾芸

4522

25

尤三姐

5905

45

贾珍

4603

25

这里面有3列数据，分别 保存了 游戏系统的用户名， 用户积分 ， 年龄

现在要求大家写一个程序，计算出同一姓氏的人的积分总和。

输出结果格式如下：

薛

:

19142

王

:

18514

尤

:

11229

贾

:

21677

答案与解析

请大家点击此处链接，观看讲解视频

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

with

open

(

'0016_1.txt'

,

encoding

=

'utf8'

)

as

f

:

infoList

=

f

.

read

().

splitlines

()

coinTable

=

{}

for

info

in

infoList

:

# 先去除左右空白字符


info

=

info

.

strip

()

if

not

info

:

continue

parts

=

info

.

split

(

' '

)

name

=

parts

[

0

]

coin

=

int

(

parts

[

-

2

])

# 如果姓氏还没有在统计表中


# 创建新元素


if

name

[

0

]

not

in

coinTable

:

coinTable

[

name

[

0

]]

=

coin

# 如果姓氏已经在统计表中


# 累加积分


else

:

coinTable

[

name

[

0

]]

+=

coin

for

name1

,

coins

in

coinTable

.

items

():

print

(

f'

{

name1

}

 : 

{

coins

}

'

)

**************************************************
**************************************************
字典
题目1

链接另存为

0019.txt

这个是一个数据文件，格式如下

薛蟠

4560

42

薛蝌

4460

25

薛宝钗

5776

43

请大家写一个程序，依次打印出里面的每一行内容的字符串长度。

注意： 这个文件应该是UTF8编码的格式，但是，由于历史原因，可能里面有些字符不是UTF8编码。

要求大家再解码每行内容的时候，如果UTF8解码错误，捕获该类型的错误，打印出 错误编码在文件中的行数，并且能够继续进行后续行的处理。

最后输出结果格式如下

第0001行，有14个字符
第0002行，有14个字符
第0003行，有13个字符
第0004行，有非utf8编码字符！！！！！！！！！！！
第0005行，有13个字符
第0006行，有14个字符


答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

# 因为文件可能包含非UTF8编码字符
# 不能指定全文使用UTF8解码
# 所以使用二进制模式打开


with

open

(

'0019.txt'

,

'rb'

)

as

f

:

bytesLines

=

f

.

read

().

splitlines

()

lineIdx

=

1

for

bytesLine

in

bytesLines

:

try

:

infoStr

=

bytesLine

.

decode

(

'UTF8'

)

print

(

f'第

{

lineIdx

:

04

}

行，有

{

len

(

infoStr

)

}

个字符'

)

except

UnicodeDecodeError

:

print

(

f'第

{

lineIdx

:

04

}

行，有非UTF8编码字符 ！！！'

)

lineIdx

+=

1

**************************************************
**************************************************
异常
题目1

请写一个函数 equals ，该函数参数为任意数量的数字，请在函数中统计出这些参数数字中重复的数字有多少个

比如 ：

equals

(

3

,

4

,

3

,

4

,

1

,

6

,

2

)

输出为：

数字

3

出现了

2

次

数字

4

出现了

2

次

数字

1

出现了

1

次

数字

6

出现了

1

次

数字

2

出现了

1

次

答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

def

equals

(

*

nums

):

# 定义统计表


stats

=

{}

for

num

in

nums

:

# 已经在统计表中


if

num

in

stats

:

stats

[

num

]

+=

1

# 不在统计表中


else

:

stats

[

num

]

=

1

for

num

,

times

in

stats

.

items

():

print

(

f'数字 

{

num

}

 出现了 

{

times

}

 次'

)

equals

(

3

,

4

,

3

,

4

,

1

,

6

,

2

)

**************************************************
**************************************************
函数可变参数
题目1

请写一个程序，在当前工作目录下，创建 如下的目录层级结构

backup/new/

然后把整个下载的source目录 内容，拷贝到 backup/new/source 目录里面去。

题目2

请写一个程序，计算出 下载的source目录里面（不包含子目录）所有的文件的大小之和

题目3

请写一个程序，删除掉 下载的source目录里面（不包含子目录）所有的扩展名为bmp的文件

题目4

请写一个程序，找出下载的source目录里面（不包含子目录）所有扩展名为.avi的文件，扩展名改为.dll

题目5

请写一个程序，找出下载的source目录里面（包含子目录）所有扩展名为.avi的文件，扩展名改为.dll

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

from

shutil

import

copytree

import

os

os

.

makedirs

(

'backup/new'

)

copytree

(

'source'

,

'backup/new/source'

)

题目2-答案

import

os

from

os.path

import

isfile

,

join

# 目标目录


targetDir

=

'source'

totalsize

=

0

for

f

in

os

.

listdir

(

targetDir

):

filePath

=

join

(

targetDir

,

f

)

if

isfile

(

filePath

):

totalsize

+=

os

.

path

.

getsize

(

filePath

)

print

(

f'合计大小为 

{

totalsize

}

 字节'

)

题目3-答案

import

os

from

os.path

import

isfile

,

join

targetDir

=

'source'

totalsize

=

0

for

f

in

os

.

listdir

(

targetDir

):

filePath

=

join

(

targetDir

,

f

)

if

isfile

(

filePath

)

and

filePath

.

endswith

(

'.bmp'

):

print

(

f'删除文件

{

filePath

}

'

)

os

.

remove

(

filePath

)

题目4-答案

import

os

from

os.path

import

isfile

,

join

targetDir

=

'source'

totalsize

=

0

for

f

in

os

.

listdir

(

targetDir

):

filePath

=

join

(

targetDir

,

f

)

if

isfile

(

filePath

)

and

filePath

.

endswith

(

'.avi'

):

newname

=

filePath

[:

-

3

]

+

'dll'

os

.

rename

(

filePath

,

newname

)

题目5-答案

import

os

from

os.path

import

join

# 目标目录


targetDir

=

r'source'

files

=

[]

# 下面的三个变量 dirpath, dirnames, filenames
# dirpath 代表当前遍历到的目录名
# dirnames 是列表对象，存放当前dirpath中的所有子目录名
# filenames 是列表对象，存放当前dirpath中的所有文件名


for

(

dirpath

,

dirnames

,

filenames

)

in

os

.

walk

(

targetDir

):

for

fn

in

filenames

:

filePath

=

join

(

dirpath

,

fn

)

if

filePath

.

endswith

(

'.avi'

):

newname

=

filePath

[:

-

3

]

+

'dll'

os

.

rename

(

filePath

,

newname

)

**************************************************
**************************************************
文件和目录操作
题目1

请写一个程序，打印出从当天开始，在一年内，所有的周日对应的日期

题目2

该文件记录了购物平台的购物记录，文件格式如下

1456190061> buy product id=vscwg9mg0rg0vt44z1aq
1456071815> buy product id=35u0c7v9jccbbooabssf
1456622256> buy product id=62amh5za0wp2u7rirz75
1456203485> buy product id=m3m6ctfjqy2ykby20gzi
1456439890> buy product id=gpjr76jn74k287fgvj8f
1456021921> buy product id=d53xy60flulobpxyk95c


其中 每行 尖括号之前为数字时间戳，表示记录该行信息的时间，也就是用户购物的时间。

请写一个程序，分析该日志文件，得出一张表，记录每一天合计的购物次数，输出格式如下：

2016-02-21 : 购物 66 次
2016-03-01 : 购物 99 次
2016-02-23 : 购物 87 次
2016-03-03 : 购物 58 次


答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

from

datetime

import

datetime

,

timedelta

today

=

datetime

.

now

().

date

()

for

i

in

range

(

365

):

thatDay

=

today

+

timedelta

(

days

=

i

)

if

thatDay

.

weekday

()

==

6

:

print

(

thatDay

.

strftime

(

'%Y-%m-%d'

))

题目2-答案

import

time

buyTable

=

{}

with

open

(

'esn.log'

)

as

f

:

lines

=

f

.

read

().

splitlines

()

for

line

in

lines

:

# 如果是空行


if

not

line

.

strip

():

continue

timestamp

=

int

(

line

.

split

(

'>'

)[

0

])

# 转化为字符串时间，包含年月日即可


# 方便判断是否是某天


ymd

=

time

.

strftime

(

'%Y-%m-%d'

,

time

.

localtime

(

timestamp

))

# 表中已经有当天记录，+1次


if

ymd

in

buyTable

:

buyTable

[

ymd

]

+=

1

else

:

buyTable

[

ymd

]

=

1

for

date

,

times

in

buyTable

.

items

():

print

(

f'

{

date

}

 : 购物 

{

times

}

 次'

)

**************************************************
**************************************************
日期和时间操作
题目1

请百度搜索并安装文本编辑器notepad++。

并且写一个Python程序，实现：

用命令行启动 notepad++ 编辑器打开当前的代码文件。

过10秒后用Windows下的命令 tasklist 找到该notepad++进程，并获取其进程ID

根据 其进程ID 使用命令 taskkill 杀死notepad++进程。

如何使用这两个命令可以参考该文章 http://tweaks.com/windows/39559/kill-processes-from-command-prompt/

答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

# notepad++程序路径, 由于路径中有空格
# 所以需要双引号括起来，这是Windows shell的语法


notepadexepath

=

r'"d:\

P

rogram Files (x86)\

No

tepad++\notepad++.exe"'

# 当前代码文件的路径


scriptpath

=

r'E:\t1.py'

from

subprocess

import

Popen

,

PIPE

import

time

,

sys

,

os

# 调用notepad++ 打开 当前代码文件


cmd

=

f'

{

notepadexepath

}

 

{

scriptpath

}

'

# 注意，不能用os.system 因为 我们的程序不能等notepad++退出


p

=

Popen

(

args

=

cmd

,

shell

=

True

)

time

.

sleep

(

10

)

# 返回的是 Popen 实例对象


p

=

Popen

(

'tasklist'

,

stdin

=

None

,

stdout

=

PIPE

,

stderr

=

None

,

shell

=

True

)

# communicate 方法返回 输出信息


outinfo

,

errinfo

=

p

.

communicate

()

# 注意返回的内容是bytes 不是 str ，
# 我的是中文windows，所以用gbk解码


outinfo

=

outinfo

.

decode

(

'gbk'

)

# print (outinfo) 


# 在输出中，寻找 notepad++ 的 进程ID


pid

=

None

proclist

=

outinfo

.

splitlines

()

for

pinfo

in

proclist

:

if

'notepad++.exe '

in

pinfo

:

print

(

pinfo

)

infolist

=

pinfo

.

split

(

' '

)

# 去掉其中的空信息


infolist

=

[

info

for

info

in

infolist

if

info

]

# 进程ID是第2个元素


pid

=

infolist

[

1

]

print

(

f'notepad++的进程ID是

{

pid

}

'

)

break

if

pid

is

None

:

print

(

'对不起，没有发现notepad++的进程ID'

)

sys

.

exit

(

2

)

# 杀掉进程


os

.

system

(

f'taskkill /PID 

{

pid

}

 /F'

)

**************************************************
**************************************************
调用其它程序
题目1

请写一个Python程序，实现：

命令行提示用户输入要下载文件的url

对于每个下载任务，新建一个线程去执行下载

答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

from

threading

import

Thread

,

Lock

import

os

# 定义wget的网址


wgetpath

=

r'd:\tools\

wge

t.exe'

# 定义函数作为下载命令的入口


def

downloadTask

(

url

):

# -P 参数指定下载存放目录


os

.

system

(

f'

{

wgetpath

}

 

{

url

}

 -P d:

\

\

tmp'

)

# 循环让用户输入下载任务


while

True

:

url

=

input

(

'请输入下载网址：'

)

if

url

.

strip

()

==

''

:

continue

# 创建一个新线程，执行存款2000操作


thread

=

Thread

(

target

=

downloadTask

,

args

=

(

url

,))

thread

.

start

()

**************************************************
**************************************************
多线程
题目1

请大家使用 pip install requests 命令安装好 requests 库。

使用文档可以参考：http://cn.python-requests.org/zh_CN/latest/

比如，我们要获取 论坛ID 为1 的帖子所有跟帖的信息，只需要访问

https://api.github.com/repos/baiyueheiyu/python3vip-forum/issues/1/comments

返回的响应消息体是json格式的字符串，如下所示

这是一个json数组， 其中每个元素对应一个跟帖的信息。 记录的信息包括了：谁发言的， 发言内容是什么等等。 如上图中红圈部分所示。

请求大家写一个程序， 把跟帖中所有 白月黑羽发言的信息 抓取出来 写到一个文件中。

最后调用notepad++ 打开该文件

答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

import

requests

from

pprint

import

pprint

from

subprocess

import

Popen

res

=

requests

.

get

(

'https://api.github.com/repos/baiyueheiyu/python3vip-forum/issues/1/comments'

)

# 将返回结果转为 python 中的list 对象


commentsList

=

res

.

json

()

with

open

(

'd:/baiyue.txt'

,

'w'

,

encoding

=

'utf8'

)

as

f

:

for

comment

in

commentsList

:

# 如果是baiyueheiyu的发言,写入文件


if

comment

[

'user'

][

'login'

]

==

'baiyueheiyu'

:

f

.

write

(

comment

[

'body'

])

f

.

write

(

'

\

n

---------------

\

n

'

)

# notepad++程序路径, 由于路径中有空格
# 所以需要双引号括起来，这是Windows shell的语法


notepadexepath

=

r'"d:\

P

rogram Files (x86)\

No

tepad++\notepad++.exe"'

# 调用notepad++ 打开 


Popen

(

args

=

f'

{

notepadexepath

}

 d:/baiyue.txt'

,

shell

=

True

)

**************************************************
**************************************************
requests和json
题目1

包含了优质的英语学习音频文件。

这些音频文件 在网页的html文件内容都是以mp3结尾的，如下图所示：

注意：

http://www.listeningexpress.com/studioclassroom/ad/

MP3文件中有空格字符，组成下载网址时，需要进行url编码，否则空格会被当成命令行分隔符。参考代码如下所示

>>>

from

urllib.parse

import

quote

>>>

quote

(

'2019-04-13 NEWSworthy Clips.mp3'

)

'2019-04-13%20NEWSworthy%20Clips.mp3'

答案与解析

请大家点击此处链接，观看讲解视频

请大家点击此处链接，观看讲解视频

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

import

requests

,

re

,

os

from

urllib.parse

import

quote

pageUrl

=

'http://www.listeningexpress.com/studioclassroom/ad/'

WGET_EXE

=

r'd:\

wge

t.exe'

res

=

requests

.

get

(

pageUrl

)

content

=

res

.

text

p

=

re

.

compile

(

r"javascript:p\

(

'(.*?\

.mp

3)'\

)

")
mp3links = p.findall(content)

print('获取到如下mp3文件:')
for link in mp3links:
    print(link)



for link in mp3links:
    fullAddr = pageUrl + quote(link)
    print(f'\n\n下载{fullAddr}')
    os.system(f'{WGET_EXE} {fullAddr}')
    print(f'ok')



**************************************************
**************************************************
正则表达式
题目1

某公司要开发一个 系统， 这个系统运行的时候， 用户输入指令，比如，查询价格，就由相应的查询价格的业务代码去处理。

假设你是系统架构师， 你确定了如下的代码文件结构

Python库模块文件名为 lib.py

里面包含一个装饰器函数 cmd_dispatch, 这个装饰器函数是给 开发业务工程师使用的。

业务代码放在svc.py文件中

在这个代码文件中，开发业务代码的工程师，可以像下面这样使用你的装饰器 cmd_dispatch

# ** svc.py **


from

lib

import

cmd_dispatch

@

cmd_dispatch

(

'查询价格'

)

def

queryPrice

():

# 具体的查询价格处理代码


print

(

'执行查询价格的业务'

)

@

cmd_dispatch

(

'退货'

)

def

refund

():

# 具体的退货处理代码


print

(

'执行退货的业务'

)

装饰器参数是 用户指令字符串，

查询价格

退货

启动代码文件是run.py。

我们运行这个run.py 就启动了整个系统。

代码如下

# ** run.py **


# cmd_route_table 是 lib模块里面的
# 存储了命令对应的业务处理函数


from

lib

import

cmd_route_table

import

svc

while

True

:

op

=

input

(

'请输入你的操作：'

)

# 如果能找到改指令的处理函数


if

op

in

cmd_route_table

:

# 查找改指令对应的业务处理函数


svcFunc

=

cmd_route_table

[

op

]

# 调用业务处理函数


svcFunc

()

else

:

print

(

'该指令没有对应业务处理'

)

请你写出 lib.py这个库， 完成上述的功能，包括装饰器函数 和 cmd_route_table。

扫码分享给朋友，一起学更有动力哦

题目1-答案

## lib.py


cmd_route_table

=

{}

def

cmd_dispatch

(

cmd

):

def

inner

(

func

):

cmd_route_table

[

cmd

]

=

func

return

func

return

inner

点击这里查看和vip学员的讲解视频

**************************************************
**************************************************
装饰器
编程题

python3.7

安装好以后，请大家写一段代码

在屏幕上打印出

hello world
你好，世界


这2行代码 先在Python交互式命令行中运行。

再将代码存入文件，用Python解释器去执行该文件。

请大家点击此处链接，观看讲解视频

判断题

Python 解释器 的作用是就像一个翻译，将Python代码翻译成计算机能理解的机器代码去执行。

如果我们想在命令行不需要输入 python.exe的全路径就能执行，就应该设置环境变量 PATH 的值，里面加上解释器程序的目录。

Python代码第一行语句前面可以空好几行

执行下面的语句可以成功，不会报错

PRINT

(

'Hello world'

)

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

**************************************************
**************************************************
安装与运行
题目1

请大家写一行代码，计算并打印出 993 + 196 的和， 乘以 7 的积， 然后除以3

这行代码 先在Python交互式命令行中运行

再将代码存入文件，用Python解释器去执行该文件

答案与解析

题目2

商 和 余数

将代码存入文件，用Python解释器去执行该文件

答案与解析

题目3

请大家写一行代码，查看对象 ‘abc’ 的类型

将代码存入文件，用Python解释器去执行该文件

答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

print

(((

993

+

196

)

*

7

)

/

3

)

题目2-答案

# 这是 商


print

(((

993

+

196

)

*

7

)

//

3

)

# 这是 余数


print

(((

993

+

196

)

*

7

)

%

3

)

题目3-答案

查看对象的类型只需要用 内置函数 type

print

(

type

(

'abc'

))

题目视频讲解

请大家点击此处链接，观看讲解视频

**************************************************
**************************************************
数字运算
题目1

判断下面的说法是否正确

变量就像是对象的名字，程序代码代码访问对象，可以通过变量名去访问对象。

没有任何引用的对象，会被Python解释器清除

num = num + 5  可以简写为 num += 5

在Python语言 中  ，所有类型的数据都是对象

解释器执行完下面的3代码后

a1

=

'老黑'

a2

=

a1

a1

=

'老白'

变量a2的值，也会变成 ‘老白’ , 因为 第2行代码 让 a1 和 a2 都对应同一个对象了， a1变了，a2也会跟着变。

答案与解析

请大家点击此处链接，观看讲解视频

题目2

如下的变量命名中，错误的有哪些

你好

a

1

a

ok

my_1

my

-

1

1

_my

1

-

my

name2age

答案与解析

请大家点击此处链接，观看讲解视频

题目3

在python交互式命令行，执行如下Python语句，解释器报错，是什么原因？

>>> var1 = 'green'
>>> print(Var1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'Var1' is not defined
>>>


答案与解析

请大家点击此处链接，观看讲解视频

题目4

你们公司每月的净利润计算公式如下

(

总收入

-

会计小王薪资

-

餐饮费

-

交通费

)

*

80

%

税费剩余

请写一段代码， 计算并打印出 每月的净利润。 代码中合理的使用变量 和注释。

具体的 收入和支出 数值可以先使用临时数字。

答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

题目1-答案

下面的说法，正确的有哪些？

变量就像是对象的名字，程序代码代码访问对象，可以通过变量名去访问对象。 （对）

没有任何引用的对象，会被Python解释器清除  （对）

num = num + 5  可以简写为 num += 5      （对）

在Python语言 中  ，所有类型的数据都是对象  （对）

解释器执行完下面的3代码后

a1

=

'老黑'

a2

=

a1

a1

=

'老白'

变量a2的值，也会变成 ‘老白’ , 因为 第2行代码 让 a1 和 a2 都对应同一个对象了， a1变了，a2也会跟着变。（错）

题目2-答案

如下的变量命名中，错误的有哪些

你好  -  对，在python3中，中文字符是可以出现在变量名中的，但是不建议这样做
a     -  对
1a    -  错，数字不能开头
ok    -  对
my_1  -  对
my-1  -  错，减号不能出现在变量名中
1_my  -  错，数字不能开头
1-my  -  错，减号不能出现在变量名中
name2age  -  对，变量名非开头部分可以有数字


题目3-答案

在python交互式命令行，执行如下Python语句，解释器报错，是什么原因？

>>> var1 = 'green'
>>> print(Var1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'Var1' is not defined
>>>


答：因为Python是大小写敏感的语言， print语句中的变量名V大写了，和定义的地方不一致，解释器运行时找不到名为Var1的变量

题目4-答案

# 总收入


total_income

=

200000

# 会计小王薪资


salary_xiaowang

=

8000

# 餐饮费


dinner_fee

=

18000

# 交通费


transportation_fee

=

8000

print

(

'本月的净利润为：'

)

print

((

total_income

-

salary_xiaowang

-

dinner_fee

-

transportation_fee

)

*

0.8

)

这样写，比用计算器好在哪里？

好处是，以后，每月需要计算收入，只要修改对应的 数字即可，更清晰直观。

**************************************************
**************************************************
变量和注释
题目1

hello world

答案与解析

请大家点击此处链接，观看讲解视频

题目2

你好世界

答案与解析

请大家点击此处链接，观看讲解视频

题目3

他说：'你好'

注意，字符串里面有英文的单引号

他说："你好"

注意，字符串里面有英文的双引号

答案与解析

请大家点击此处链接，观看讲解视频

题目4

请大家写一行代码，定义一个Python字符串变量 内容为

他说：'你
好'


注意，字符串里面有新的一行

答案与解析

请大家点击此处链接，观看讲解视频

题目5

有如下的代码，定义了一个Python字符串

str1

=

'大家好，我的名字叫：黑羽白月'

请接下来写一行代码，使用字符串切片的方法 ，打印出 str1里面的人名字。

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

字符串变量定义用单引号，双引号，三引号都可以，如下

str1

=

'hello world'

str2

=

"hello world"

str3

=

'''hello world'''

题目2-答案

中文字符串变量定义也是一样，用单引号，双引号，三引号都可以，如下

str1

=

'你好世界'

str2

=

"你好世界"

str3

=

'''你好世界'''

题目3-答案

如果字符串里面有引号，那么定义字符串就应该使用不同的引号。

里面是单引号，外面就用双引号。

里面是双引号，外面就用单引号。

str1

=

"他说：'你好'"

str2

=

'他说："你好"'

题目4-答案

如果字符串里面有换行符，我们定义字符串的时候可以使用三引号，而且字符串里面有引号，那么外面的三引号应该使用不同的类型的引号

str1

=

"""他说：'你
好'"""

也可以使用换行符

str2

=

"他说：'你

\

n

好'"

题目5-答案

可以使用正数下标，数到名字的前面的位置，注意是下标是从0开始，
可以把光标放在字符的前面，按右方向键 一个个的移过去，边移边数，

像这样

str1

=

'大家好，我的名字叫：黑羽白月'

print

(

str1

[

10

:

14

])

print

(

str1

[

10

:])

print

(

str1

[

len

(

str1

)

-

4

:])

print

(

str1

[

-

4

:])

**************************************************
**************************************************
字符串
题目1

如下，

def

testfunc

(

arg1

,

arg2

):

return

(

arg1

+

arg2

)

我们这样定义一个函数后，下面哪些调用方法是错误的

testfunc

(

1

)

testfunc

(

1

,

2

)

testfunc

(

arg1

=

1

,

arg2

=

2

)

testfunc

(

arg2

=

2

,

arg1

=

1

)

testfunc

(

arg1

=

1

,

2

)

testfunc

(

1

,

arg2

=

2

)

print

(

testfunc

(

1

,

arg2

=

2

))

print

(

testfunc

(

1

,

arg2

=

2

)

*

8

)

答案与解析

请大家点击此处链接，观看讲解视频

题目2

请描述一下，下面两个函数定义

def

func1

(

num1

,

num2

):

return

num1

**

2

+

num2

**

2

def

func2

(

num1

,

num2

):

print

(

num1

**

2

+

num2

**

2

)

有什么不同？

答案与解析

请大家点击此处链接，观看讲解视频

题目3

下面这段代码有什么问题？

func1

(

1

,

2

)

def

func1

(

num1

,

num2

):

return

num1

**

2

+

num2

**

2

答案与解析

请大家点击此处链接，观看讲解视频

题目4

请开发一个函数，该函数 接受两个字符串参数，

第1个参数格式如下，

他的名字是：小王


第2个参数格式如下，

他的年龄是：18


两个字符

小王:18

实现该函数后，请调用 该函数，依次传入下面的参数。

他的名字是：关羽
他的年龄是：28


他的名字是：赵云
他的年龄是：24


指定参数名调用

不指定参数名调用

最后，将调用返回结果的返回值打印出来

答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

如下，

def

testfunc

(

arg1

,

arg2

):

return

(

arg1

+

arg2

)

我们这样定义一个函数后，下面哪些调用方法是错误的

testfunc

(

1

)

# 错，必填参数arg2 缺少


testfunc

(

1

,

2

)

# 对


testfunc

(

arg1

=

1

,

arg2

=

2

)

# 对，可以指定参数名传值


testfunc

(

arg2

=

2

,

arg1

=

1

)

# 对，指定参数名时，次序可以颠倒


testfunc

(

arg1

=

1

,

2

)

# 错，一旦指定参数名，后面的参数都要指定参数名


testfunc

(

1

,

arg2

=

2

)

# 对


print

(

testfunc

(

1

,

arg2

=

2

))

# 对, 函数调用的返回值可以不用赋值给变量，
# 直接为作为另一个函数的参数


print

(

testfunc

(

1

,

arg2

=

2

)

*

8

)

# 对, 函数调用的返回值可以不用赋值给变量，
# 直接用在表达式中


题目2-答案

请描述一下，下面两个函数定义

def

func1

(

num1

,

num2

):

return

num1

**

2

+

num2

**

2

def

func2

(

num1

,

num2

):

print

(

num1

**

2

+

num2

**

2

)

有什么不同？

答： 前者是 计算结果作为返回值返回， 后者 只是打印出计算结果，返回值为None

题目3-答案

答： 函数必须先定义再调用， 不能先调用再定义。

题目4-答案

函数定义如下

# 有两个参数


def

getNameAge

(

str1

,

str2

):

# 用切片获取第1个参数的人名


name

=

str1

[

-

2

:]

# 用切片获取第2个参数的 年龄


age

=

str2

[

-

2

:]

# 将人名和 年龄连起来，中间是冒号


ret

=

name

+

':'

+

age

# 别忘了， 最后一定要使用return 返回结果


return

ret

# 不指定参数名的调用


name_age1

=

getNameAge

(

'他的名字是：关羽'

,

'他的年龄是：28'

)

# 打印出返回结果


print

(

name_age1

)

# 指定参数名的调用


name_age2

=

getNameAge

(

str1

=

'他的名字是：赵云'

,

str2

=

'他的年龄是：24'

)

# 打印出返回结果


print

(

name_age2

)

**************************************************
**************************************************
函数
题目1

你们公司每月的净利润计算公式如下

(

总收入

-

会计小王薪资

-

餐饮费

-

交通费

)

*

80

%

税费剩余

请大家写Python程序，合理的使用变量 和注释 ，计算 并 打印出 每月的净利润。

具体的 收入和支出 数值，使用input函数，让用户输入。

答案与解析

题目2

请定义一个函数printlen, 该函数中让用户输入一个字符串， 该函数打印出用户输入的这个字符串的 长度

比如 用户输入 123456789， 该函数应该打印出：长度为9

答案与解析

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

# 总收入


total_income

=

input

(

'本月总收入为：'

)

# 注意，input返回的都是字符串，需要转化为数字对象


total_income

=

int

(

total_income

)

# 会计小王薪资


salary_xiaowang

=

input

(

'会计小王薪资：'

)

# 注意，input返回的都是字符串，需要转化为数字对象


salary_xiaowang

=

int

(

salary_xiaowang

)

# 餐饮费


dinner_fee

=

input

(

'餐饮费：'

)

# 注意，input返回的都是字符串，需要转化为数字对象


dinner_fee

=

int

(

dinner_fee

)

# 交通费


transportation_fee

=

input

(

'交通费：'

)

# 注意，input返回的都是字符串，需要转化为数字对象


transportation_fee

=

int

(

transportation_fee

)

print

(

'本月的净利润为：'

)

print

((

total_income

-

salary_xiaowang

-

dinner_fee

-

transportation_fee

)

*

0.8

)

这个题目的一个注意点是，input返回的是！！数字对象，即使用户输入的是数字，返回的也是字符串，只是字符串中是数字字符。

如果要对返回的结果进行数学计算，需要把字符串转化为数字对象，转化为整数使用内置函数int，转化为小数使用内置函数float

**************************************************
**************************************************
用户输入
题目1

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

答案与解析

请大家点击此处链接，观看讲解视频

题目2

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

答案与解析

请大家点击此处链接，观看讲解视频

题目3

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

请分别用一行代码，实现：

答案与解析

请大家点击此处链接，观看讲解视频

题目4

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

(

'我的名字'

,

'黑羽白月'

),

'hello world!'

]

答案与解析

请大家点击此处链接，观看讲解视频

题目5

判断一下，下面的 代码，执行后打印出的结果是 hello， 还是 ok

def

func

(

arg

):

arg

=

'hello'

var

=

'ok'

func

(

var

)

print

(

var

)

请大家点击此处链接，观看讲解视频

def

func

(

arg

):

arg

[

0

]

=

'hello'

var

=

[

'ok'

]

func

(

var

)

print

(

var

)

请大家点击此处链接，观看讲解视频

def

func

(

arg

):

arg

=

[

'hello'

]

var

=

[

'ok'

]

func

(

var

)

print

(

var

)

请大家点击此处链接，观看讲解视频

答案与解析

题目6

判断下面的说法是否正确

列表和元组里面的元素可以是任意类型的对象，包括字符串、数字、列表、元组、函数

切片操作只能用在列表上，不能用在元组上，因为元组是不可改变的

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

我们可以说 ‘我的名字’ 是 var1 对应的列表里面的一个元素

请大家点击此处链接，观看讲解视频

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

这个字符串是列表的最后一个元素，也可以说是列表的第3个元素

我们可以这样打印

print

(

var1

[

-

1

])

也可以这样打印

print

(

var1

[

2

])

题目2-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

这个人名字是列表的第2个元素（第2个元素本身也是列表） 里面的第二个元素

我们可以这样打印

print

(

var1

[

1

][

1

])

题目3-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

请分别用一行代码，实现：

列表是可变数据类型，因为列表中的元素是可以被替换的。

var1

[

-

1

]

=

'Oh my God!'

var1

[

1

][

1

]

=

'拜月童子'

题目4-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

(

'我的名字'

,

'黑羽白月'

),

'hello world!'

]

元组(Tuple)是不可变数据类型，我们不能这样修改

var1

[

1

][

1

]

=

'拜月童子'

因为 var1[1] 对应的正是里面的第2个元组对象。

要修改其内容， 只有把var1 这个列表对象的整个第2个元组对象替换掉。 因为列表的元素是可以修改的。

所以，可以这样

var1

[

1

]

=

(

'我的名字'

,

'拜月童子'

)

题目5-答案

判断一下，下面的 代码，执行后打印出的结果是 hello， 还是 ok

def

func

(

arg

):

arg

=

'hello'

var

=

'ok'

func

(

var

)

print

(

var

)

答： 还是 ‘ok’ 。

var

=

'ok'

这行代码让变量var 指向了 字符串对象 ‘ok’

func

(

var

)

这行代码调用函数，首先让参数变量arg也指向了 字符串对象 ‘ok’

后面函数里面执行

arg

=

'hello'

让参数变量arg指向关系发生了改变，它指向了另一个字符串对象 ‘hello’

但是，这不会改变 var指向的对象， var还是指向 字符串对象 ‘ok’

所以调用完后， print(var) 的结果，还是  ‘ok’

def

func

(

arg

):

arg

[

0

]

=

'hello'

var

=

[

'ok'

]

func

(

var

)

print

(

var

)

答： 是[‘hello’] 。

var

=

[

'ok'

]

这行代码让变量var 指向了 列表对象 [‘ok’]

func

(

var

)

这行代码调用函数，首先让参数变量arg也指向了 列表对象 [‘ok’]

后面函数里面执行

arg

[

0

]

=

'hello'

列表对象因为这行代码 发生了改变。

所以  外面的 全局变量 var也指向这个列表对象， 列表对象本身改变，自然var 对应的值 也改变了。

def

func

(

arg

):

arg

=

[

'hello'

]

var

=

[

'ok'

]

func

(

var

)

print

(

var

)

答： 是[‘ok’] 。

var

=

[

'ok'

]

这行代码让变量var 指向了 列表对象 [‘ok’]

func

(

var

)

这行代码调用函数，首先让参数变量arg也指向了 列表对象 [‘ok’]

后面函数里面执行

arg

=

[

'hello'

]

但是，这不会改变 var指向的对象， var还是指向 列表对象 [‘ok’]

所以调用完后， print(var) 的结果，还是  [‘ok’]

**************************************************
**************************************************
列表和元组
题目1

请大家实现一个程序， 对人的健康状况进行评估。

该程序运行起来先询问用户

请输入你的身高(单位米):


用户输入身高（比如1.8）后，再询问用户

请输入你的体重(单位公斤):


用户输入体重（比如70）后，再询问用户

请输入你的年龄:


用户输入年龄（比如30）后，进行如下判断：

如果用户 年龄 < 10 岁， 显示：10岁以下儿童不参与健康评估

如果用户 年龄 >=10 岁 并且 < 60 岁：

如果 体重 除以 身高的2次方 > 24 就提示用户体重超重

如果 体重 除以 身高的2次方 < 18 就提示用户体重超轻

否则，就提示用户 体重正常

如果用户 年龄 >= 60 岁， 显示：60岁以上老人不参与健康评估

答案与解析

题目2

运行下面的代码，会打印出 ‘f2’ 吗？ 为什么？

def

f1

():

print

(

'f1'

)

return

True

def

f2

():

print

(

'f2'

)

return

True

if

f1

():

print

(

"a"

)

elif

f2

():

print

(

"b"

)

else

:

print

(

"c"

)

请大家点击此处链接，观看讲解视频

题目3

下面的表达式，运行结果分别是什么

6

>

7

or

(

8

>

9

and

10

>

9

)

(

6

>

7

or

8

>

4

)

and

10

>

9

(

7

>

6

or

8

>

4

)

and

10

>

9

7

>

6

or

(

8

>

4

and

10

>

9

)

请大家点击此处链接，观看讲解视频

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

这是个 判断条件  有多种分支的 程序

height

=

input

(

'请输入你的身高(单位 米):'

)

# 转化为浮点数


intHeight

=

float

(

height

)

weight

=

input

(

'请输入你的体重(单位 公斤):'

)

# 转化为浮点数


intWeight

=

float

(

weight

)

age

=

input

(

'请输入你的年龄:'

)

# 转化为整数


intAge

=

int

(

age

)

if

intAge

<

10

:

print

(

'10岁以下儿童不参与健康评估'

)

elif

intAge

<

60

:

# bmi 变量代表健康指数


bmi

=

intWeight

/

(

intHeight

**

2

)

if

bmi

>

24

:

print

(

'您的体重偏重了'

)

elif

bmi

<

18

:

print

(

'您的体重偏轻了'

)

else

:

print

(

'您的体重正常'

)

else

:

print

(

'60岁以上老人不参与健康评估'

)

**************************************************
**************************************************
判断语句
题目1

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

答案与解析

题目2

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

答案与解析

题目3

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

答案与解析

题目4

有如下的代码，定义了一个Python字符串

str1

=

'大家好，我的名字叫：黑羽白月'

答案与解析

请大家点击此处链接，观看讲解视频

题目5

有如下的代码，定义了一个Python字符串

str1

=

'大家好，我的名字叫：黑羽白月'

答案与解析

请大家点击此处链接，观看讲解视频

题目6

请写一个程序：

首先提示用户输入年龄、身高、体重信息，格式如下如下

请输入您的性别：男
请输入您的身高（厘米）：175厘米
请输入您的体重（公斤）：80公斤


注意：

175  厘米

然后根据如下的计算公式，计算出身高对应的标准体重。

标准体重(男)=(身高cm-100)x0.9(kg)
标准体重(女)=(身高cm-100)x0.9(kg)-2.5(kg)


如果体重在标准体重上下5公斤，都属于标准体重，提示用户体重标准。

否则提示用户高于标准还是低于标准

答案与解析

请大家点击此处链接，观看讲解视频

题目7

请写一个函数，该函数 参数为一个字符串，请验证该字符串是否是一个合法的email地址，合法返回True，否则返回False

规则如下

@

@

比如 ：

validate_email(“@gmail.com”) 返回结果应该是 False

validate_email(“hello.gmail@com”) 返回结果应该是 False

validate_email(“hello.gmail@.com”) 返回结果应该是 False

VIP 学员请将本题答案发给老师，老师通过本题的完成情况评估学习效果。

点击这里，观看 白月黑羽老师 和 VIP小班学员 1对1讲解本题

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

列表后面添加元素当然是用append方法

所以，可以这样

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

var1

.

append

(

'你好'

)

题目2-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

列表前面添加元素可以用insert方法

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

var1

.

insert

(

0

,

'你好'

)

题目3-答案

有如下的代码，定义了一个Python列表 变量

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

列表中间位置添加元素可以用insert方法，33后面的位置就是 索引为1的位置，所以

var1

=

[

33

,

[

'我的名字'

,

'黑羽白月'

],

'hello world!'

]

var1

.

insert

(

1

,

'你好'

)

题目4-答案

有如下的代码，定义了一个Python字符串

str1

=

'大家好，我的名字叫：黑羽白月'

发现名字前面有冒号：

我们可以使用find方法查找冒号的位置。

str1

.

find

(

'：'

)

这个表达式返回的就是冒号在str1字符串的下标位置，不需要我们辛苦的去数下标位置。

注意：冒号是中文冒号，不是英文冒号

我们要的人名部分就在冒号的后面，所以需要 下标加1 ，

str1

.

find

(

'：'

)

+

1

完整代码如下：

str1

=

'大家好，我的名字叫：黑羽白月'

print

(

str1

[

str1

.

find

(

'：'

)

+

1

:])

题目5-答案

有如下的代码，定义了一个Python字符串

str1

=

'大家好，我的名字叫：黑羽白月'

发现名字前面有冒号：

我们可以使用字符串split将冒号前后的字符串切成两个子字符串，存在列表对象中。

str1

.

split

(

'：'

)

这个表达式返回的就是一个列表，里面包含了冒号前后的两个子字符串。

内容是这样的

[

'大家好，我的名字叫'

,

'黑羽白月'

]

显然我们要的人名部分就在列表的第二个元素 ，表达式可以这样写

str1

.

split

(

'：'

)[

1

]

# 列表的第2个元素下标为1


也可以这样写

str1

.

split

(

'：'

)[

-

1

]

# 列表的第最后一个元素下标为-1


完整代码如下：

str1

=

'大家好，我的名字叫：黑羽白月'

print

(

str1

.

split

(

'：'

)[

1

])

split方法 经常用来 从 字符串中扣取出某个数据，大家要学会多用它

题目6-答案

gender

=

input

(

'请输入您的性别：'

)

gender

=

gender

.

replace

(

' '

,

''

)

height

=

input

(

'请输入您的身高（厘米）：'

)

height

=

height

.

replace

(

' '

,

''

)

height

=

height

.

replace

(

'厘米'

,

''

)

height

=

int

(

height

)

weight

=

input

(

'请输入您的体重（公斤）：'

)

weight

=

weight

.

replace

(

' '

,

''

)

weight

=

weight

.

replace

(

'公斤'

,

''

)

weight

=

int

(

weight

)

if

gender

==

'男'

:

standard

=

(

height

-

100

)

*

0.9

else

:

standard

=

(

height

-

100

)

*

0.9

-

2.5

if

standard

-

5

<

weight

<

standard

+

5

:

print

(

'体重健康'

)

elif

standard

<

weight

:

print

(

'太重了'

)

else

:

print

(

'太轻了'

)

**************************************************
**************************************************
对象的方法
题目1

有如下的代码，

str1

=

'大家好，我的名字叫：'

str2

=

'黑羽白月'

请接下来写一行代码，用字符串格式化的方式 将 str1 和 str2 拼接成一个字符串。

答案与解析

题目2

在用户输入后，显示

你的名字是：xxxx， 你的年龄是yy


其中xxxx是刚才用户输入的名字
yy是刚才用户输入的年龄

答案与解析

题目3

下面的 列表中保存了 游戏系统里面的 用户信息

info

=

[

[

'user1'

,

345.6

,

12

,

'黄金'

],

[

'user2'

,

2345.6

,

8

,

'白银'

],

[

'user3555'

,

55345.6

,

22

,

'钻石'

],

]

每个元素也是一个列表， 对应一个用户的信息。

其中， 元素1 是用户的姓名， 元素2 是用户的积分，元素3是用户的等级，元素4是用户的头衔。

请写代码 根据上面的列表，以下面的格式打印用户的信息到屏幕上。

用户：

user1

，

积分：

345.6

，

等级：

12

，

头衔：黄金

用户：

user2

，

积分：

2345.6

，

等级：

8

，

头衔：白银

用户：

user3555

，

积分：

55345.6

，

等级：

12

，

头衔：钻石

注意，使用适当的格式化方式， 使输出像上面那样对齐

答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

对于这样的两个字符串

str1

=

'大家好，我的名字叫：'

str2

=

'黑羽白月'

拼接有很多种方法

可以像这样，使用加号

total

=

str1

+

str2

也可以使用格式化的方式

像这样

total

=

'%s%s'

%

(

str1

,

str2

)

还可以这样格式化

total

=

'{}{}'

.

format

(

str1

,

str2

)

如果使用的Python解释器是3.6以后的版本，可以这样

total

=

f'

{

str1

}{

str2

}

'

题目2-答案

这是一个典型的字符串格式化的例子

完整代码如下：

name

=

input

(

'输入你的名字'

)

age

=

input

(

'输入你的年龄'

)

print

(

f'你的名字是：

{

name

}

， 你的年龄是

{

age

}

'

)

题目3-答案

info

=

[

[

'user1'

,

345.6

,

12

,

'黄金'

],

[

'user2'

,

2345.6

,

8

,

'白银'

],

[

'user3555'

,

55345.6

,

22

,

'钻石'

],

]

print

(

f'用户：

{

info

[

0

][

0

]:

>

10

}

， 积分：

{

info

[

0

][

1

]:

7

}

， 等级：

{

info

[

0

][

2

]:

2

}

， 头衔：

{

info

[

0

][

3

]

}

'

)

print

(

f'用户：

{

info

[

1

][

0

]:

>

10

}

， 积分：

{

info

[

1

][

1

]:

7

}

， 等级：

{

info

[

1

][

2

]:

2

}

， 头衔：

{

info

[

1

][

3

]

}

'

)

print

(

f'用户：

{

info

[

2

][

0

]:

>

10

}

， 积分：

{

info

[

2

][

1

]:

7

}

， 等级：

{

info

[

2

][

2

]:

2

}

， 头衔：

{

info

[

2

][

3

]

}

'

)

**************************************************
**************************************************
格式化字符串
题目1

有如下的2个字符串

str1

=

'''
熊宁
杰益

王伟伟

青芳

玉琴
焦候涛
莫福
杨高旺
唐欢欢
韩旭
'''

str2

=

'''
焦候涛 
熊宁 
玉琴 

骆龙 

韩旭 
杨高旺

杰益  

莫福  

伟伟

李福  
'''

请写一个程序

找出 str1 中所有 str2 中不存在的人名，并且

找出 str2 中所有 str1 中不存在的人名

答案与解析

请大家点击此处链接，观看讲解视频

请大家点击此处链接，观看讲解视频

题目2

有如下的字符串，记录了三国人物的名字和年龄

ageTable

=

'''
    诸葛亮, 28
    刘备, 48
    刘琦, 25
    赵云, 32
    张飞, 43
    关羽, 45
'''

请写一个程序将其中 30岁以上和以下的人分别打印出来，类似这样

大于等于30岁的人有：
刘备
赵云
张飞
关羽

小于30岁的人有：
诸葛亮
刘琦


答案与解析

请大家点击此处链接，观看讲解视频

题目3

关羽 和张飞 正在玩 剪刀石头布 的游戏。

写一个函数calculate_score， 参数是列表， 里面包含了n个元素也是列表。

比如 像这样 [[“剪刀”, “石头”], [“布”, “剪刀”], [“剪刀”, “剪刀”]]

n 个元素代表 n局 比赛，用列表表示，比如 [“剪刀”, “石头”]

其中第1个元素表示关羽打出的手势，第2个元素是张飞打出的手势。

函数要计算出谁赢得次数多，输出比赛结果。

如果他们打成平手，输出“平局”。

比如：

calculate_score

([[

"剪刀"

,

"石头"

],

[

"布"

,

"剪刀"

],

[

"剪刀"

,

"剪刀"

]])

输出应该是：

张飞

3

局赢了

2

局，平手一局，张飞胜出

calculate_score

([[

"布"

,

"石头"

],

[

"石头"

,

"剪刀"

],

[

"石头"

,

"剪刀"

]])

输出应该是：

关羽

3

局赢了

3

局，关羽胜出

答案与解析

和VIP学员甲讲解本题，当你毫无思路时，如何用伪代码理清思路

和VIP学员乙讲解本题的开发思路，他已经可以开发出一部分代码，但是关键点卡住了

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

str1

=

'''
熊宁
杰益

王伟伟

青芳

玉琴
焦候涛
莫福
杨高旺
唐欢欢
韩旭
'''

str2

=

'''
焦候涛 
熊宁 
玉琴 

骆龙 

韩旭 
杨高旺

杰益  

莫福  

伟伟

李福  
'''

# 注意：有的人名 可能是另外一个人名的一部分，
# 比如 伟伟 是王伟伟 的一部分， 
# 所以我们不能 通过 'name in str1' 这样的方式判断


# 先定义一个函数，可以把参数字符串中的人名都放入一个列表中


def

getNameList

(

namesStr

):

tmp

=

namesStr

.

splitlines

()

# 去掉其中的空行和人名前后的空格


names

=

[]

for

name

in

tmp

:

name

=

name

.

strip

()

if

name

==

''

:

continue

names

.

append

(

name

)

return

names

names1

=

getNameList

(

str1

)

names2

=

getNameList

(

str2

)

print

(

'str1中独有的人名是：'

)

for

name

in

names1

:

if

name

not

in

names2

:

print

(

name

)

print

(

'

\

n

\

n

'

)

print

(

'str2中独有的人名是：'

)

for

name

in

names2

:

if

name

not

in

names1

:

print

(

name

)

题目2-答案

ageTable

=

'''
    诸葛亮, 28
    刘备, 48
    刘琦, 25
    赵云, 32
    张飞, 43
    关羽, 45
'''

# 先转换成如下格式的列表
# ageList = [
#     '诸葛亮, 28',
#     '刘备, 48',
#     '赵云, 42',
#     ....
# ]


ageList

=

[]

for

item

in

ageTable

.

split

(

'

\

n

'

):

# 跳过空行


if

item

.

strip

()

==

''

:

continue

ageList

.

append

(

item

)

g30

=

[]

# 大于30岁人员列表


l30

=

[]

# 小于30岁人员列表


for

oneman

in

ageList

:

name

,

age

=

oneman

.

split

(

','

)

age

=

int

(

age

.

strip

())

name

=

name

.

strip

()

if

age

>=

30

:

g30

.

append

(

name

)

else

:

l30

.

append

(

name

)

print

(

'大于等于30岁的人有：'

)

for

man

in

g30

:

print

(

man

)

print

(

'

\

n

小于30岁的人有：'

)

for

man

in

l30

:

print

(

man

)

题目3-答案

def

calculate_score

(

rounds

):

guan_win_round

=

0

zhang_win_round

=

0

ping_round

=

0

# 取出列表里面每一局round，进行如下处理：


for

round

in

rounds

:

guan

=

round

[

0

]

zhang

=

round

[

1

]

# 判断谁赢


win

=

None

if

guan

==

'剪刀'

:

if

zhang

==

'石头'

:

win

=

'z'

elif

zhang

==

'剪刀'

:

win

=

'='

elif

zhang

==

'布'

:

win

=

'g'

elif

guan

==

'石头'

:

if

zhang

==

'石头'

:

win

=

'='

elif

zhang

==

'剪刀'

:

win

=

'g'

elif

zhang

==

'布'

:

win

=

'z'

elif

guan

==

'布'

:

if

zhang

==

'石头'

:

win

=

'g'

elif

zhang

==

'剪刀'

:

win

=

'z'

elif

zhang

==

'布'

:

win

=

'='

if

win

==

'g'

:

print

(

'关羽赢'

)

guan_win_round

+=

1

elif

win

==

'z'

:

print

(

'张飞赢'

)

zhang_win_round

+=

1

elif

win

==

'='

:

print

(

'平局'

)

ping_round

+=

1

print

(

'

\

n

=============

\

n

'

)

print

(

f'关羽赢

{

guan_win_round

}

次'

)

print

(

f'张飞赢

{

zhang_win_round

}

次'

)

print

(

f'平局

{

ping_round

}

次'

)

if

guan_win_round

>

zhang_win_round

:

print

(

'关羽赢'

)

elif

guan_win_round

<

zhang_win_round

:

print

(

'张飞赢'

)

else

:

print

(

'平局'

)

calculate_score

([[

'剪刀'

,

'石头'

],

[

'布'

,

'剪刀'

],

[

'剪刀'

,

'剪刀'

]])

**************************************************
**************************************************
循环
题目1

链接另存为

0013_a1.txt

该文件的内容编码方式是utf8。

该文件中记录了小区中人的姓名和年龄

请编写一个程序，将其中年龄大于50岁的找出来， 并且以这样的格式追加到该文件末尾中。

大于50岁的人有：xxx,xxx,xxx


答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目2

你们公司有一批图片文件，不小心被管理人员把扩展名都去掉了。

这批图片文件中有的是png文件，有的是jpg文件。

89  50  4e  47  0d  0a  1a  0a

现在要求你写一个函数，参数是图片文件的路径，函数根据文件的开头8个字节的信息，判断该文件是不是png文件。

如果是，打印出 png， 否则打印出 jpg。

小班学员请联系老师获取答案视频讲解

补充练习

小班学员请联系老师获取补充练习，并做阶段学习交流

题目1-答案

# 因为文件是utf8编码


with

open

(

'0013_a1.txt'

,

encoding

=

'utf8'

)

as

f

:

lines

=

f

.

read

().

splitlines

()

oldPeople

=

[]

for

line

in

lines

:

# 去掉行中的空格


line

=

line

.

replace

(

' '

,

''

)

# 如果是空格，跳过


if

not

line

:

continue

name

,

age

=

line

.

split

(

':'

)

if

int

(

age

)

>

50

:

oldPeople

.

append

(

name

)

oldPeopleStr

=

','

.

join

(

oldPeople

)

appendText

=

f'

\

n

\

n

大于50岁的人有：

{

oldPeopleStr

}

'

with

open

(

'0013_a1.txt'

,

'a'

,

encoding

=

'utf8'

)

as

f

:

f

.

write

(

appendText

)

**************************************************
**************************************************
文件读写
题目1

请大家使用 pip install requests 命令安装好 requests 库。

该库可以用来构建http请求发送给服务器，并获取响应消息。 经常用于测试服务端和一些自动化工作。

使用文档可以参考：http://cn.python-requests.org/zh_CN/latest/

以大秦铁路（股票代码：sh601006）为例，如果要获取它的最新行情，只需访问新浪的接口：
http://hq.sinajs.cn/list=sh601006

这个url会返回一串文本，例如：

var hq_str_sh601006="大秦铁路, 27.55, 27.25, 26.91, 27.55, 26.20, 26.91, 26.92,22114263, 589824680, 4695, 26.91, 57590, 26.90, 14700, 26.89, 14300,26.88, 15100, 26.87, 3100, 26.92, 8900, 26.93, 14230, 26.94, 25150, 26.95, 15220, 26.96, 2008-01-11, 15:05:32";


这个字符串由许多数据拼接在一起，不同含义的数据用逗号隔开了，按照程序员的思路，顺序号从0开始。

0：”大秦铁路”，股票名字；
1：”27.55″，今日开盘价；
2：”27.25″，昨日收盘价；


后面的字段我们就不需要了

getStockPrice

答案与解析

请大家点击此处链接，观看讲解视频

题目2

链接另存为

getissue.py

这个文件里面有一个函数 getIssueBody。 可以将我们论坛上指定某个帖子的主体内容返回回来。

其参数是帖子的ID。

请大家编写一个程序使用该函数，分别返回ID 为 1 和 2 的两个帖子的内容。

要求大家编写程序的代码文件 （比如main.py）和  getissue.py 分别放在不同的目录下面。

大家可以通过 设置环境变量 PYTHONPATH,  或者直接修改 sys.path 的方式， 让解释器可以寻找到 getissue.py 这个模块文件。

答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

import

requests

def

getStockPrice

(

stockName

):

# 构造 HTTP 请求


url

=

f'http://hq.sinajs.cn/list=

{

stockName

}

'

# 返回的response 对应响应消息的对象


response

=

requests

.

get

(

url

)

# 返回的内容在消息体中，通过text属性获取


info

=

response

.

text

print

(

info

)

# 返回的是这种格式 大秦铁路, 27.55, 27.25, 26.91,


# 通过split 方法截取


price

=

info

.

split

(

','

)[

1

]

return

price

price

=

getStockPrice

(

'sz000063'

)

print

(

price

)

题目2-答案

假设我们下载 模块 getissue.py 文件存储路径为 d:\libs\getissue.py

而我们编写的调用该函数的代码文件路径为 e:\main.py, 其内容为

from

getissue

import

getIssueBody

# 获取ID 为 1 的 帖子的内容


print

(

getIssueBody

(

1

))

# 获取ID 为 2 的 帖子的内容


print

(

getIssueBody

(

2

))

那么我们运行的时候 在进入命令行的时候，输入命令

set PYTHONPATH=d:\libs

set PYTHONPATH=d:\libs

设置环境变量，这样解释器启动后， d:\libs 这个路径就会被加到 sys.path中， 当执行 import xxx 模块的时候，就会把这个路径作为模块搜索的路径之一。

如下所示

**************************************************
**************************************************
使用库
题目1

链接另存为

0016_1.txt

这个是一个数据文件，格式如下

薛蟠

4560

42

薛蝌

4460

25

薛宝钗

5776

43

这里面有3列数据，分别 保存了 游戏系统的用户名， 用户积分 ， 年龄

现在要求大家写一个程序，打印出该数据文件中积分最多的用户姓名。

大家使用教程里面推荐的 Pycharm 集成开发环境，创建一个项目文件，并写相应的代码。

在开发过程中，发现问题，可以使用我们教程推荐的 调试程序的方法进行调试，发现问题根源，并解决问题。

答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

# 因为文件是utf8编码


with

open

(

'0016_1.txt'

,

encoding

=

'utf8'

)

as

f

:

infoList

=

f

.

read

().

splitlines

()

# 该列表保存积分最多人的姓名


maxpeople

=

[]

# 该变量保存积分最多的分值


maxCoin

=

0

for

info

in

infoList

:

# 去掉行左右空白内容


info

=

info

.

strip

()

# 如果是空行，跳过此行


if

not

info

:

continue

# 以空格符为分隔符，切割行内容


parts

=

info

.

split

(

' '

)

# 姓名在第1列


name

=

parts

[

0

]

# 积分在倒数第二列


coin

=

int

(

parts

[

-

2

])

# 如果当前用户积分 大于 记录中的最大积分


if

coin

>

maxCoin

:

maxpeople

=

[

name

]

maxCoin

=

coin

# 如果当前用户积分 等于 记录中的最大积分


elif

coin

==

maxCoin

:

maxpeople

.

append

(

name

)

print

(

maxpeople

)

**************************************************
**************************************************
调试程序
题目1

链接另存为

0016_1.txt

这个是一个数据文件，格式如下

薛蟠

4560

42

薛蝌

4460

25

薛宝钗

5776

43

薛宝琴

4346

42

王夫人

3360

25

王熙凤

4460

35

王子腾

5660

45

王仁

5034

65

尤二姐

5324

25

贾芹

5663

25

贾蓉

3446

15

贾兰

3443

35

贾芸

4522

25

尤三姐

5905

45

贾珍

4603

25

这里面有3列数据，分别 保存了 游戏系统的用户名， 用户积分 ， 年龄

现在要求大家写一个程序，计算出同一姓氏的人的积分总和。

输出结果格式如下：

薛

:

19142

王

:

18514

尤

:

11229

贾

:

21677

答案与解析

请大家点击此处链接，观看讲解视频

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

with

open

(

'0016_1.txt'

,

encoding

=

'utf8'

)

as

f

:

infoList

=

f

.

read

().

splitlines

()

coinTable

=

{}

for

info

in

infoList

:

# 先去除左右空白字符


info

=

info

.

strip

()

if

not

info

:

continue

parts

=

info

.

split

(

' '

)

name

=

parts

[

0

]

coin

=

int

(

parts

[

-

2

])

# 如果姓氏还没有在统计表中


# 创建新元素


if

name

[

0

]

not

in

coinTable

:

coinTable

[

name

[

0

]]

=

coin

# 如果姓氏已经在统计表中


# 累加积分


else

:

coinTable

[

name

[

0

]]

+=

coin

for

name1

,

coins

in

coinTable

.

items

():

print

(

f'

{

name1

}

 : 

{

coins

}

'

)

**************************************************
**************************************************
字典
题目1

链接另存为

0019.txt

这个是一个数据文件，格式如下

薛蟠

4560

42

薛蝌

4460

25

薛宝钗

5776

43

请大家写一个程序，依次打印出里面的每一行内容的字符串长度。

注意： 这个文件应该是UTF8编码的格式，但是，由于历史原因，可能里面有些字符不是UTF8编码。

要求大家再解码每行内容的时候，如果UTF8解码错误，捕获该类型的错误，打印出 错误编码在文件中的行数，并且能够继续进行后续行的处理。

最后输出结果格式如下

第0001行，有14个字符
第0002行，有14个字符
第0003行，有13个字符
第0004行，有非utf8编码字符！！！！！！！！！！！
第0005行，有13个字符
第0006行，有14个字符


答案与解析

请大家点击此处链接，观看讲解视频

扫码分享给朋友，一起学更有动力哦

题目1-答案

# 因为文件可能包含非UTF8编码字符
# 不能指定全文使用UTF8解码
# 所以使用二进制模式打开


with

open

(

'0019.txt'

,

'rb'

)

as

f

:

bytesLines

=

f

.

read

().

splitlines

()

lineIdx

=

1

for

bytesLine

in

bytesLines

:

try

:

infoStr

=

bytesLine

.

decode

(

'UTF8'

)

print

(

f'第

{

lineIdx

:

04

}

行，有

{

len

(

infoStr

)

}

个字符'

)

except

UnicodeDecodeError

:

print

(

f'第

{

lineIdx

:

04

}

行，有非UTF8编码字符 ！！！'

)

lineIdx

+=

1

**************************************************
**************************************************
异常
题目1

请写一个函数 equals ，该函数参数为任意数量的数字，请在函数中统计出这些参数数字中重复的数字有多少个

比如 ：

equals

(

3

,

4

,

3

,

4

,

1

,

6

,

2

)

输出为：

数字

3

出现了

2

次

数字

4

出现了

2

次

数字

1

出现了

1

次

数字

6

出现了

1

次

数字

2

出现了

1

次

答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

def

equals

(

*

nums

):

# 定义统计表


stats

=

{}

for

num

in

nums

:

# 已经在统计表中


if

num

in

stats

:

stats

[

num

]

+=

1

# 不在统计表中


else

:

stats

[

num

]

=

1

for

num

,

times

in

stats

.

items

():

print

(

f'数字 

{

num

}

 出现了 

{

times

}

 次'

)

equals

(

3

,

4

,

3

,

4

,

1

,

6

,

2

)

**************************************************
**************************************************
函数可变参数
题目1

请写一个程序，在当前工作目录下，创建 如下的目录层级结构

backup/new/

然后把整个下载的source目录 内容，拷贝到 backup/new/source 目录里面去。

题目2

请写一个程序，计算出 下载的source目录里面（不包含子目录）所有的文件的大小之和

题目3

请写一个程序，删除掉 下载的source目录里面（不包含子目录）所有的扩展名为bmp的文件

题目4

请写一个程序，找出下载的source目录里面（不包含子目录）所有扩展名为.avi的文件，扩展名改为.dll

题目5

请写一个程序，找出下载的source目录里面（包含子目录）所有扩展名为.avi的文件，扩展名改为.dll

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

from

shutil

import

copytree

import

os

os

.

makedirs

(

'backup/new'

)

copytree

(

'source'

,

'backup/new/source'

)

题目2-答案

import

os

from

os.path

import

isfile

,

join

# 目标目录


targetDir

=

'source'

totalsize

=

0

for

f

in

os

.

listdir

(

targetDir

):

filePath

=

join

(

targetDir

,

f

)

if

isfile

(

filePath

):

totalsize

+=

os

.

path

.

getsize

(

filePath

)

print

(

f'合计大小为 

{

totalsize

}

 字节'

)

题目3-答案

import

os

from

os.path

import

isfile

,

join

targetDir

=

'source'

totalsize

=

0

for

f

in

os

.

listdir

(

targetDir

):

filePath

=

join

(

targetDir

,

f

)

if

isfile

(

filePath

)

and

filePath

.

endswith

(

'.bmp'

):

print

(

f'删除文件

{

filePath

}

'

)

os

.

remove

(

filePath

)

题目4-答案

import

os

from

os.path

import

isfile

,

join

targetDir

=

'source'

totalsize

=

0

for

f

in

os

.

listdir

(

targetDir

):

filePath

=

join

(

targetDir

,

f

)

if

isfile

(

filePath

)

and

filePath

.

endswith

(

'.avi'

):

newname

=

filePath

[:

-

3

]

+

'dll'

os

.

rename

(

filePath

,

newname

)

题目5-答案

import

os

from

os.path

import

join

# 目标目录


targetDir

=

r'source'

files

=

[]

# 下面的三个变量 dirpath, dirnames, filenames
# dirpath 代表当前遍历到的目录名
# dirnames 是列表对象，存放当前dirpath中的所有子目录名
# filenames 是列表对象，存放当前dirpath中的所有文件名


for

(

dirpath

,

dirnames

,

filenames

)

in

os

.

walk

(

targetDir

):

for

fn

in

filenames

:

filePath

=

join

(

dirpath

,

fn

)

if

filePath

.

endswith

(

'.avi'

):

newname

=

filePath

[:

-

3

]

+

'dll'

os

.

rename

(

filePath

,

newname

)

**************************************************
**************************************************
文件和目录操作
题目1

请写一个程序，打印出从当天开始，在一年内，所有的周日对应的日期

题目2

该文件记录了购物平台的购物记录，文件格式如下

1456190061> buy product id=vscwg9mg0rg0vt44z1aq
1456071815> buy product id=35u0c7v9jccbbooabssf
1456622256> buy product id=62amh5za0wp2u7rirz75
1456203485> buy product id=m3m6ctfjqy2ykby20gzi
1456439890> buy product id=gpjr76jn74k287fgvj8f
1456021921> buy product id=d53xy60flulobpxyk95c


其中 每行 尖括号之前为数字时间戳，表示记录该行信息的时间，也就是用户购物的时间。

请写一个程序，分析该日志文件，得出一张表，记录每一天合计的购物次数，输出格式如下：

2016-02-21 : 购物 66 次
2016-03-01 : 购物 99 次
2016-02-23 : 购物 87 次
2016-03-03 : 购物 58 次


答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

from

datetime

import

datetime

,

timedelta

today

=

datetime

.

now

().

date

()

for

i

in

range

(

365

):

thatDay

=

today

+

timedelta

(

days

=

i

)

if

thatDay

.

weekday

()

==

6

:

print

(

thatDay

.

strftime

(

'%Y-%m-%d'

))

题目2-答案

import

time

buyTable

=

{}

with

open

(

'esn.log'

)

as

f

:

lines

=

f

.

read

().

splitlines

()

for

line

in

lines

:

# 如果是空行


if

not

line

.

strip

():

continue

timestamp

=

int

(

line

.

split

(

'>'

)[

0

])

# 转化为字符串时间，包含年月日即可


# 方便判断是否是某天


ymd

=

time

.

strftime

(

'%Y-%m-%d'

,

time

.

localtime

(

timestamp

))

# 表中已经有当天记录，+1次


if

ymd

in

buyTable

:

buyTable

[

ymd

]

+=

1

else

:

buyTable

[

ymd

]

=

1

for

date

,

times

in

buyTable

.

items

():

print

(

f'

{

date

}

 : 购物 

{

times

}

 次'

)

**************************************************
**************************************************
日期和时间操作
题目1

请百度搜索并安装文本编辑器notepad++。

并且写一个Python程序，实现：

用命令行启动 notepad++ 编辑器打开当前的代码文件。

过10秒后用Windows下的命令 tasklist 找到该notepad++进程，并获取其进程ID

根据 其进程ID 使用命令 taskkill 杀死notepad++进程。

如何使用这两个命令可以参考该文章 http://tweaks.com/windows/39559/kill-processes-from-command-prompt/

答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

# notepad++程序路径, 由于路径中有空格
# 所以需要双引号括起来，这是Windows shell的语法


notepadexepath

=

r'"d:\

P

rogram Files (x86)\

No

tepad++\notepad++.exe"'

# 当前代码文件的路径


scriptpath

=

r'E:\t1.py'

from

subprocess

import

Popen

,

PIPE

import

time

,

sys

,

os

# 调用notepad++ 打开 当前代码文件


cmd

=

f'

{

notepadexepath

}

 

{

scriptpath

}

'

# 注意，不能用os.system 因为 我们的程序不能等notepad++退出


p

=

Popen

(

args

=

cmd

,

shell

=

True

)

time

.

sleep

(

10

)

# 返回的是 Popen 实例对象


p

=

Popen

(

'tasklist'

,

stdin

=

None

,

stdout

=

PIPE

,

stderr

=

None

,

shell

=

True

)

# communicate 方法返回 输出信息


outinfo

,

errinfo

=

p

.

communicate

()

# 注意返回的内容是bytes 不是 str ，
# 我的是中文windows，所以用gbk解码


outinfo

=

outinfo

.

decode

(

'gbk'

)

# print (outinfo) 


# 在输出中，寻找 notepad++ 的 进程ID


pid

=

None

proclist

=

outinfo

.

splitlines

()

for

pinfo

in

proclist

:

if

'notepad++.exe '

in

pinfo

:

print

(

pinfo

)

infolist

=

pinfo

.

split

(

' '

)

# 去掉其中的空信息


infolist

=

[

info

for

info

in

infolist

if

info

]

# 进程ID是第2个元素


pid

=

infolist

[

1

]

print

(

f'notepad++的进程ID是

{

pid

}

'

)

break

if

pid

is

None

:

print

(

'对不起，没有发现notepad++的进程ID'

)

sys

.

exit

(

2

)

# 杀掉进程


os

.

system

(

f'taskkill /PID 

{

pid

}

 /F'

)

**************************************************
**************************************************
调用其它程序
题目1

请写一个Python程序，实现：

命令行提示用户输入要下载文件的url

对于每个下载任务，新建一个线程去执行下载

答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

from

threading

import

Thread

,

Lock

import

os

# 定义wget的网址


wgetpath

=

r'd:\tools\

wge

t.exe'

# 定义函数作为下载命令的入口


def

downloadTask

(

url

):

# -P 参数指定下载存放目录


os

.

system

(

f'

{

wgetpath

}

 

{

url

}

 -P d:

\

\

tmp'

)

# 循环让用户输入下载任务


while

True

:

url

=

input

(

'请输入下载网址：'

)

if

url

.

strip

()

==

''

:

continue

# 创建一个新线程，执行存款2000操作


thread

=

Thread

(

target

=

downloadTask

,

args

=

(

url

,))

thread

.

start

()

**************************************************
**************************************************
多线程
题目1

请大家使用 pip install requests 命令安装好 requests 库。

使用文档可以参考：http://cn.python-requests.org/zh_CN/latest/

比如，我们要获取 论坛ID 为1 的帖子所有跟帖的信息，只需要访问

https://api.github.com/repos/baiyueheiyu/python3vip-forum/issues/1/comments

返回的响应消息体是json格式的字符串，如下所示

这是一个json数组， 其中每个元素对应一个跟帖的信息。 记录的信息包括了：谁发言的， 发言内容是什么等等。 如上图中红圈部分所示。

请求大家写一个程序， 把跟帖中所有 白月黑羽发言的信息 抓取出来 写到一个文件中。

最后调用notepad++ 打开该文件

答案与解析

扫码分享给朋友，一起学更有动力哦

题目1-答案

import

requests

from

pprint

import

pprint

from

subprocess

import

Popen

res

=

requests

.

get

(

'https://api.github.com/repos/baiyueheiyu/python3vip-forum/issues/1/comments'

)

# 将返回结果转为 python 中的list 对象


commentsList

=

res

.

json

()

with

open

(

'd:/baiyue.txt'

,

'w'

,

encoding

=

'utf8'

)

as

f

:

for

comment

in

commentsList

:

# 如果是baiyueheiyu的发言,写入文件


if

comment

[

'user'

][

'login'

]

==

'baiyueheiyu'

:

f

.

write

(

comment

[

'body'

])

f

.

write

(

'

\

n

---------------

\

n

'

)

# notepad++程序路径, 由于路径中有空格
# 所以需要双引号括起来，这是Windows shell的语法


notepadexepath

=

r'"d:\

P

rogram Files (x86)\

No

tepad++\notepad++.exe"'

# 调用notepad++ 打开 


Popen

(

args

=

f'

{

notepadexepath

}

 d:/baiyue.txt'

,

shell

=

True

)

**************************************************
**************************************************
requests和json
题目1

包含了优质的英语学习音频文件。

这些音频文件 在网页的html文件内容都是以mp3结尾的，如下图所示：

注意：

http://www.listeningexpress.com/studioclassroom/ad/

MP3文件中有空格字符，组成下载网址时，需要进行url编码，否则空格会被当成命令行分隔符。参考代码如下所示

>>>

from

urllib.parse

import

quote

>>>

quote

(

'2019-04-13 NEWSworthy Clips.mp3'

)

'2019-04-13%20NEWSworthy%20Clips.mp3'

答案与解析

请大家点击此处链接，观看讲解视频

请大家点击此处链接，观看讲解视频

补充练习

VIP小班学员请联系老师获取补充练习，并做阶段学习交流

扫码分享给朋友，一起学更有动力哦

题目1-答案

import

requests

,

re

,

os

from

urllib.parse

import

quote

pageUrl

=

'http://www.listeningexpress.com/studioclassroom/ad/'

WGET_EXE

=

r'd:\

wge

t.exe'

res

=

requests

.

get

(

pageUrl

)

content

=

res

.

text

p

=

re

.

compile

(

r"javascript:p\

(

'(.*?\

.mp

3)'\

)

")
mp3links = p.findall(content)

print('获取到如下mp3文件:')
for link in mp3links:
    print(link)



for link in mp3links:
    fullAddr = pageUrl + quote(link)
    print(f'\n\n下载{fullAddr}')
    os.system(f'{WGET_EXE} {fullAddr}')
    print(f'ok')



**************************************************
**************************************************
正则表达式
题目1

某公司要开发一个 系统， 这个系统运行的时候， 用户输入指令，比如，查询价格，就由相应的查询价格的业务代码去处理。

假设你是系统架构师， 你确定了如下的代码文件结构

Python库模块文件名为 lib.py

里面包含一个装饰器函数 cmd_dispatch, 这个装饰器函数是给 开发业务工程师使用的。

业务代码放在svc.py文件中

在这个代码文件中，开发业务代码的工程师，可以像下面这样使用你的装饰器 cmd_dispatch

# ** svc.py **


from

lib

import

cmd_dispatch

@

cmd_dispatch

(

'查询价格'

)

def

queryPrice

():

# 具体的查询价格处理代码


print

(

'执行查询价格的业务'

)

@

cmd_dispatch

(

'退货'

)

def

refund

():

# 具体的退货处理代码


print

(

'执行退货的业务'

)

装饰器参数是 用户指令字符串，

查询价格

退货

启动代码文件是run.py。

我们运行这个run.py 就启动了整个系统。

代码如下

# ** run.py **


# cmd_route_table 是 lib模块里面的
# 存储了命令对应的业务处理函数


from

lib

import

cmd_route_table

import

svc

while

True

:

op

=

input

(

'请输入你的操作：'

)

# 如果能找到改指令的处理函数


if

op

in

cmd_route_table

:

# 查找改指令对应的业务处理函数


svcFunc

=

cmd_route_table

[

op

]

# 调用业务处理函数


svcFunc

()

else

:

print

(

'该指令没有对应业务处理'

)

请你写出 lib.py这个库， 完成上述的功能，包括装饰器函数 和 cmd_route_table。

扫码分享给朋友，一起学更有动力哦

题目1-答案

## lib.py


cmd_route_table

=

{}

def

cmd_dispatch

(

cmd

):

def

inner

(

func

):

cmd_route_table

[

cmd

]

=

func

return

func

return

inner

点击这里查看和vip学员的讲解视频

**************************************************
**************************************************
装饰器
